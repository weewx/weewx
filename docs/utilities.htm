<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>weewx: Utilities Guide</title>
    <meta http-equiv="Content-Language" content="en-us"/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <link rel="stylesheet" href="css/ui-lightness/jquery-ui-1.10.4.custom.min.css"/>
    <link rel="stylesheet" href="css/jquery.tocify.css"/>
    <link rel="stylesheet" href="css/weewx_docs.css"/>
    <link rel="icon" href="images/favicon.png" type="image/png"/>
</head>

<body>

<!-- please use the following nomenclature for consistency:         -->
<!-- command - something entered at a unix or sql prompt            -->
<!--            e.g., wee_extension --import=basic --no-prompt      -->
<!--                  select * from archive;                        -->
<!-- action - specifier to a command that tells it to do something  -->
<!--            e.g., --import=basic                                -->
<!-- option - specifier to a command that affects action behavior   -->
<!--            e.g., --no-prompt                                   -->

<div class="sidebar">
    <div class="doclist">
        <a href="usersguide.htm">User's Guide</a><br/>
        <a href="customizing.htm">Customization Guide</a><br/>
        <a href="hardware.htm">Hardware Guide</a><br/>
        <a href="utilities.htm">Utilities Guide</a><br/>
        <a href="upgrading.htm">Upgrade Guide</a><br/>
        <a href="devnotes.htm">Notes for Developers</a>
    </div>
    <div id="toc_controls"></div>
    <div id="toc_parent">
        <div id="toc">
            <!-- The table of contents will be injected here -->
        </div>
    </div>
</div>

<div class="main">

    <div class="header">
        <div class="logoref">
            <a href='http://weewx.com'> <img src='images/logo-weewx.png' class='logo' align='right' alt="weewx logo"/>
            </a><br/>
	<span class='version'>
Version: 3.7
    </span>
        </div>
        <div class="title">weeWX Utilities Guide</div>
    </div>

    <div id="technical_content" class="content">
        <p>This is a reference guide to the executable utilities that come with weeWX:</p>
        <ul>
            <li><a href="#wee_config_utility"> <span class="code">wee_config</span></a> for changing the configuration
                file, and configuring new device drivers;
            </li>
            <li><a href="#wee_database_utility"> <span class="code">wee_database</span></a> for reconfiguring the
                database;
            </li>
            <li><a href="#wee_debug_utility"> <span class="code">wee_debug</span></a> for producing debug reports for
                remote support;
            </li>
            <li><a href="#wee_device_utility"> <span class="code">wee_device</span></a> for configuring your hardware;
            </li>
            <li><a href="#wee_extension_utility"> <span class="code">wee_extension</span></a> for installing and
                removing extensions;
            </li>
            <li><a href="#wee_import_utility"> <span class="code">wee_import</span></a> for importing historical data
                from external sources;
            </li>
            <li><a href="#wee_reports_utility"> <span class="code">wee_reports</span></a> for running reports without
                running weeWX itself;
            </li>
            <li><a href="#weewxd"> <span class="code">weewxd</span></a> the main weewx program;
            </li>
            <li><a href="#wunderfixer_utility"> <span class="code">wunderfixer</span></a> for resending data missing on the
                Weather Underground site.
            </li>
        </ul>

        <!-- ======== -->


        <h1 id="wee_config_utility"><span class="code">wee_config</span></h1>

        <p>
            When you install weeWX for the first time, the installation process will prompt
            you for the most essential options, such as the type of hardware you are using, latitude, longitude, or
            altitude. But, what if you want to change these later? In particular, what if you want to change device
            drivers? You could edit the definitive configuration file, <span class="code">weewx.conf</span>, by
            hand &mdash; described in detail in the <a href="usersguide.htm">User's Guide</a> &mdash; but it's a big
            file with lots of nuances. Alternatively, if you're just changing something simple, you may be able to use
            the utility <span class="code">wee_config</span>. </p>

        <p>
            Before starting, it's worth running it with the <span class="code">--help</span> option to see how it is
            used: </p>
        <pre class="tty cmd">wee_config --help</pre>
        <p>This results in:</p>
    <pre class="tty">
Usage: wee_config --help
       wee_config --version
       wee_config --list-drivers
       wee_config --install --dist-config=DIST_CONFIG --output=OUT_CONFIG
           [--driver=DRIVER]  [--units=(us|metric)]
           [--latitude=yy.y] [--longitude=xx.x] [--altitude=zz.z,(foot|meter)]
           [--location="Home Sweet Home"]
           [--no-prompt] [--no-backup]
       wee_config --upgrade CONFIG_FILE|--config=CONFIG_FILE
           --dist-config=DIST_CONFIG
           [--output=OUT_CONFIG] [--no-prompt] [--no-backup] [--warn-on-error]
       wee_config --reconfigure CONFIG_FILE|--config=CONFIG_FILE
           [--driver=DRIVER]  [--units=(us|metric)]
           [--latitude=yy.y] [--longitude=xx.x] [--altitude=zz.z,(foot|meter)]
           [--location="Home Sweet Home"]
           [--output=OUT_CONFIG] [--no-prompt] [--no-backup]

Actions:

--list-drivers  List the available weewx device drivers, then exit.
--install       Install a new configuration file starting with the contents of
                DIST_CONFIG, prompting for station parameters.
--upgrade       Update the contents of configuration file CONFIG_FILE to the
                installed version, then merge the result with the contents of
                configuration file DIST_CONFIG.
--reconfigure   Modify an existing configuration file CONFIG_FILE with any
                specified station parameters.  Use this command with the
                driver option to change the device driver.

Station parameters:

  --driver      --units
  --latitude    --longitude
  --altitude    --location


Options:
  -h, --help            show this help message and exit
  --version             Show the weewx version then exit.
  --list-drivers        List the available device drivers.
  --install             Install a new configuration file.
  --upgrade             Update an existing configuration file, then merge with
                        contents of DIST_CONFIG.
  --reconfigure         Reconfigure an existing configuration file.
  --config=CONFIG_FILE  Use configuration file CONFIG_FILE.
  --dist-config=DIST_CONFIG
                        Use template configuration file DIST_CONFIG.
  --output=OUT_CONFIG   Save to configuration file OUT_CONFIG.  If not
                        specified then replace existing configuration file.
  --driver=DRIVER       Use the driver DRIVER. For example,
                        weewx.driver.vantage
  --latitude=yy.y       The station latitude in decimal degrees.
  --longitude=xx.x      The station longitude in decimal degrees.
  --altitude=zz,(foot|meter)
                        The station altitude in either feet or meters. For
                        example, '750,foot' or '320,meter'
  --location=LOCATION   A text description of the station. For example,
                        "Santa's workshop, North Pole"
  --units=(metric|us)   Set display units to 'metric' or 'us'.
  --no-prompt           Do not prompt. Use default or specified values.
  --no-backup           When replacing an existing configuration file, do not
                        create a backup copy.
  --warn-on-error       Only warn if an update is not possible.  Default
                        behavior is to warn then exit.
  --debug               Show diagnostic information while running.
</pre>

        <h2><span id='wee_config_details'>Actions and options</span></h2>

        <h3>Option <span class="code">--config</span></h3>
        <p>
            The utility is pretty good about "guessing" where the configuration
            file <span class="code">weewx.conf</span> is, but if you've done
            an unusual install, you may have to tell it explicitly. You can do
            this by either putting the location directly in the command line:
        </p>

        <pre class="tty cmd">wee_config /home/weewx/weewx.conf</pre>

        <p>or by using option <span class="code">--config</span>:</p>

        <pre class="tty cmd">wee_config --config=/home/weewx/weewx.conf</pre>

        <h3>Action <span class="code">--list-drivers</span></h3>
        <p>Use this action to list which device drivers are available on your
            system. For example:</p>

        <pre class="tty cmd">wee_config --list-drivers</pre>

        <p>This will result in something like:</p>

    <pre class="tty">
Module name              Driver name    Version  Status
  weewx.drivers.acurite    AcuRite        0.19     No module named usb
  weewx.drivers.cc3000     CC3000         0.8
  weewx.drivers.fousb      FineOffsetUSB  1.7      No module named usb
  weewx.drivers.simulator  Simulator      3.0
  weewx.drivers.te923      TE923          0.14     No module named usb
  weewx.drivers.ultimeter  Ultimeter      0.13
  weewx.drivers.vantage    Vantage        3.0
  weewx.drivers.wmr100     WMR100         3.0      No module named usb
  weewx.drivers.wmr200     WMR200         3.0      No module named usb
  weewx.drivers.wmr9x8     WMR9x8         3.0
  weewx.drivers.ws1        WS1            0.19
  weewx.drivers.ws23xx     WS23xx         0.24
  weewx.drivers.ws28xx     WS28xx         0.34     No module named usb
</pre>

        <p>The column <span class="code">Status</span> can give you some indication of whether you are missing any
            modules to use this driver. It's not completely accurate, but works for most drivers.</p>

        <h3>Action <span class="code">--reconfigure</span></h3>

        <p>This action is used to change station parameters, including the
            device driver.  The reconfigure action will prompt for all of
            the required station parameters.</p>

        <pre class="tty cmd">wee_config --reconfigure</pre>

        <p>When used with the <span class="code">--no-prompt</span> option,
            reconfigure will modify specific parameters with no interaction.
            For example, this would set the station altitude:</p>

        <pre class="tty cmd">wee_config --reconfigure --altitude=35,foot --no-prompt</pre>

        <p>This would change the driver to a user-installed netatmo driver:</p>

        <pre class="tty cmd">wee_config --reconfigure --driver=user.netatmo --no-prompt</pre>

        <h2>Example: changing the driver</h2>

        <p>Say that you originally installed weeWX
            with the Simulator. Now you've bought a Davis Vantage and you want
            to switch to that. Here's how you do it. First, use the action
            <span class="code">--list-drivers</span> to see which drivers
            are installed.</p>

        <pre class="tty"><span class="cmd">wee_config --list-drivers</span>

Module name              Driver name    Version  Status
  weewx.drivers.acurite    AcuRite        0.19     
  weewx.drivers.cc3000     CC3000         0.8
  weewx.drivers.fousb      FineOffsetUSB  1.7      
  weewx.drivers.simulator  Simulator      3.0
  weewx.drivers.te923      TE923          0.14     
  weewx.drivers.ultimeter  Ultimeter      0.13
  weewx.drivers.vantage    Vantage        3.0
  weewx.drivers.wmr100     WMR100         3.0      
  weewx.drivers.wmr200     WMR200         3.0      
  weewx.drivers.wmr9x8     WMR9x8         3.0
  weewx.drivers.ws1        WS1            0.19
  weewx.drivers.ws23xx     WS23xx         0.24
  weewx.drivers.ws28xx     WS28xx         0.34
</pre>

        <p>
            From the list, you will find that the name of the driver for the Vantage is <span class="code">weewx.drivers.vantage</span>.
            Now run <span class="code">wee_config</span>, with the <span class="code">--reconfigure</span> action,
            specifying that driver: </p>
        <pre class="tty cmd">wee_config --reconfigure --driver=weewx.drivers.vantage</pre>

        <p>You can also run without specifying the driver <i>a priori</i>:</p>
        <pre class="tty cmd">wee_config --reconfigure</pre>

        <p>
            The utility will go through your previously selected options, such as station description, latitude,
            longitude, altitude, <i>etc.</i>. With the exception of your newly specified device driver, all your
            previously selected values will be the defaults. So, all you have to do is keep hitting enter. This is what
            it looked like when I switched from the simulator to the Vantage driver: </p>
    <pre class="tty">Using configuration file /home/weewx/weewx.conf
Enter a brief description of the station, such as its location.  For example:
Santa's Workshop, North Pole
description [Hood River, Oregon]:
Specify altitude, with units 'foot' or 'meter'.  For example:
35, foot
12, meter
altitude [700, foot]:
Specify latitude in decimal degrees, negative for south.
latitude [45]:
Specify longitude in decimal degrees, negative for west.
longitude [-125]:
Indicate the preferred units for display: 'metric' or 'us'
units [metricwx]:
Installed drivers include:
  0) AcuRite         (weewx.drivers.acurite)
  1) CC3000          (weewx.drivers.cc3000)
  2) FineOffsetUSB   (weewx.drivers.fousb)
  3) Simulator       (weewx.drivers.simulator)
  4) TE923           (weewx.drivers.te923)
  5) Ultimeter       (weewx.drivers.ultimeter)
  6) Vantage         (weewx.drivers.vantage)
  7) WMR100          (weewx.drivers.wmr100)
  8) WMR200          (weewx.drivers.wmr200)
  9) WMR9x8          (weewx.drivers.wmr9x8)
 10) WS1             (weewx.drivers.ws1)
 11) WS23xx          (weewx.drivers.ws23xx)
 12) WS28xx          (weewx.drivers.ws28xx)
choose a driver [6]:
Specify the hardware interface, either 'serial' or 'ethernet'.
If the station is connected by serial, USB, or serial-to-USB
adapter, specify serial.  Specify ethernet for stations with
WeatherLinkIP interface.
type [serial]:
Specify a port for stations with a serial interface, for
example /dev/ttyUSB0 or /dev/ttyS0.
port [/dev/ttyUSB0]:
Saved backup to /home/weewx/weewx.conf.20150430084525
Saved configuration to /home/weewx/weewx.conf
</pre>

        <p>If this is too much trouble, you can specify the <span class="code">--no-prompt</span> option: </p>

        <pre class="tty cmd">wee_config --reconfigure --driver=weewx.drivers.vantage --no-prompt</pre>

        <p>This will accept all the defaults, including your new device driver, without asking for any input.</p>


        <!-- ======== -->


        <h1 id="wee_database_utility"><span class="code">wee_database</span></h1>
        <p>This database utility simplifies typical database maintenance operations. For example, it can rebuild the
            daily summaries or check a SQLite database for embedded strings where floats are expected.</p>

        <p>Run the utility with the <span class="code">--help</span> option to see how it is used:</p>
        <pre class="tty cmd">wee_database --help</pre>
        <p>This will result in an output that looks something like this:</p>
        <pre class="tty">
Usage: wee_database --help
       wee_database --create
       wee_database --reconfigure
       wee_database --transfer --dest-binding=BINDING_NAME [--dry-run]
       wee_database --check
       wee_database --update [--dry-run]
       wee_database --check-strings
       wee_database --fix-strings [--dry-run]
       wee_database --drop-daily
       wee_database --rebuild-daily
            [--date=YYYY-mm-dd | --from=YYYY-mm-dd --to=YYYY-mm-dd]

Description:

Manipulate the weeWX database. Most of these operations are handled automatically
by weeWX, but they may be useful in special cases.

Options:
  -h, --help            show this help message and exit
  --config=CONFIG_FILE  Use configuration file CONFIG_FILE.
  --create              Create the weeWX database and initialize it with the
                        schema.
  --drop-daily          Drop the daily summary tables from a database.
  --rebuild-daily       Rebuild the daily summaries from data in the archive
                        table.
  --date=YYYY-mm-dd     This date only (option --rebuild-daily only).
  --from=YYYY-mm-dd     Start with this date (option --rebuild-daily only).
  --to=YYYY-mm-dd       End with this date (option --rebuild-daily only).
  --reconfigure         Create a new database using configuration information
                        found in the configuration file. In particular, the
                        new database will use the unit system found in option
                        [StdConvert][target_unit]. The new database will have
                        the same name as the old database, with a '_new' on
                        the end.
  --transfer            Transfer the weeWX archive from source database to
                        destination database.
  --check               Check the calculations in the daily summary tables.
  --update              Update the daily summary tables if required and
                        recalculate the daily summary maximum windSpeed
                        values.
  --check-strings       Check the archive table for null strings that may have
                        been introduced by a SQL editing program.
  --fix-strings         Fix any null strings in a SQLite database.
  --binding=BINDING_NAME
                        The data binding to use. Default is 'wx_binding'.
  --dest-binding=BINDING_NAME
                        The destination data binding (option --transfer only).
  --dry-run             Print what would happen but do not do it. Default is
                        False.
</pre>

        <h2><span id='wee_database_details'>Actions and options</span></h2>

        <h3>Action <span class="code">--create</span></h3>
        <p>If the database does not already exist, this action will create it
            and initialize it with the schema specified in the
            weeWX configuration file. Because weeWX does this
            automatically, this action is rarely needed.</p>

        <pre class="tty cmd">wee_database --create</pre>

        <h3>Action <span class="code">--drop-daily</span></h3>
        <p>In addition to the regular archive data, every weeWX database also 
            includes a daily summary table for each observation type. Because 
            there can be dozens of observation types, there can be dozens of 
            these daily summaries. It doesn't happen very often, but there can 
            be occasions when it's necessary to drop them all and then rebuild 
            them. Dropping them by hand would be very tedious! This action does 
            them all at once.</p>

        <pre class="tty cmd">wee_database --drop-daily</pre>

        <h3>Action <span class="code">--rebuild-daily</span></h3>
        <p>This action is the inverse of action <span class="code">--drop-daily</span> in 
            that it rebuilds the daily summaries from the archive data. In most 
            cases it is not necessary to drop the daily summaries tables using 
            the action <span class="code">--drop-daily</span> before rebuilding 
            them. The action <span class="code">--rebuild-daily</span> accepts 
            a number of date related options, <span class="code">--date</span>, 
            <span class="code">--from</span> and <span class="code">--to</span>, 
            that allow selective rebuilding of the daily summaries for one or 
            more days rather than for the entire archive history. These options 
            may be useful if  bogus data has been removed from the archive 
            covering a single day or a period of few days. The daily summaries 
            can then be rebuilt for this period only, resulting in a faster 
            rebuild and detailed low/high values and the associated times being 
            retained for unaffected days. The <span class="code">--date</span> option 
            limits the daily summary rebuild to the specified date, the 
            <span class="code">--from</span> and <span class="code">--to</span> options 
            must be used together and limit the daily summary rebuild to the 
            specified inclusive period.</p>

        <pre class="tty cmd">wee_database --rebuild-daily
wee_database --rebuild-daily --date=YYYY-mm-dd
wee_database --rebuild-daily --from=YYYY-mm-dd --to=YYYY-mm-dd</pre>

        <h3>Action <span class="code">--reconfigure</span></h3>
        <p>This action is useful for changing the schema in your database.</p>

        <p>It creates a new database with the same name as the old, except with 
            the suffix <span class="code">_new</span> attached at the end 
            (nominally, <span class="code">weewx.sdb_new</span> if you
            are using SQLite, <span class="code">weewx_new</span> if you are 
            using MySQL). It then initializes it with the schema specified 
            in <span class="code">weewx.conf</span>. Finally, it copies over the 
            data from your old database into the new database.</p>
            
        <pre class="tty cmd">wee_database --reconfigure</pre>

        <p>See the section <a href="customizing.htm#Adding_a_new_observation_type">Adding a new observation type</a> in 
            the Customization Guide for step-by-step instructions that use this 
            option.</p>

        <h3>Action <span class="code">--transfer</span></h3>
        <p>This action is useful for moving your database from one type of 
            database to another, such as from SQLite to MySQL. To use it, you 
            must have two bindings specified in your <span class="code">weewx.conf</span>
            configuration file. One will serve as the source, the other as the 
            destination. Specify the source binding with option <span class="code">--binding</span>, 
            the destination binding with option <span class="code">--dest-binding</span>. 
            The <span class="code">--binding</span> option may be omitted in 
            which case the default <span class="code">wx-binding</span> will be 
            used.
        </p>
        
        <pre class="tty cmd">wee_database --transfer --binding=source_binding --dest-binding=dest_binding
wee_database --transfer --dest-binding=dest_binding</pre>
        
        <p>See the Wiki for examples of moving data from <a
                href="https://github.com/weewx/weewx/wiki/Transfer%20from%20sqlite%20to%20MySQL#using-wee_database">SQLite
            to MySQL</a>, and from <a
                href="https://github.com/weewx/weewx/wiki/Transfer%20from%20MySQL%20to%20sqlite#using-wee_database">MySQL
            to SQLite</a>, using <span class="code">wee_database</span>.</p>

        <h3>Action <span class="code">--check</span></h3>
        <p>This action will check the calculations in the daily summary tables 
            as well as checking the archive for null strings (refer 
            to <a href="#wee_database_utility_check_strings">--check-strings</a>).
            If the daily summary tables contain summaries calculated using
            an old algorithm, the user is advised to update the daily summary
            tables using the <span class="code">--update</span> action. If null 
            strings are found the user is advised to fix them using the 
            <span class="code">--fix-strings</span> action.
        </p>

        <pre class="tty cmd">wee_database --check</pre>
        
        <h3 id="wee_database_utility_update">Action <span class="code">--update</span></h3>
        <p>This action updates the daily summary tables to use interval weighted 
            calculations as well as recalculating the <span class="code">windSpeed</span> 
            maximum daily values and times. Interval weighted calculations are 
            only applied to the daily summaries if not previously applied. The 
            update process is irreversible and users are advised to backup their 
            database before performing this action.
        </p>

        <pre class="tty cmd">wee_database --update</pre>
        
        <p>For further information on interval weighting and recalculation of 
            daily <span class="code">windSpeed</span> maximum values, see the 
            sections <a href="upgrading.htm#change_to_daily_summaries">Changes to daily summaries</a> and 
            <a href="upgrading.htm#recalculation_of_windspeed">Recalculation of <span class="code">windSpeed</span> maximum values</a> 
            in the Upgrade Guide.</p>
        
        <h3 id="wee_database_utility_check_strings">Action <span class="code">--check-strings</span></h3>
        <p>Normally, all entries in the archive are numbers. However, some 
            SQLite database editors use a null string instead of a null 
            value when deleting entries. These null strings can cause problems.
            This action checks the database to see if it contains any null
            strings.
        </p>

        <pre class="tty cmd">wee_database --check-strings</pre>

        <h3>Action <span class="code">--fix-strings</span></h3>
        <p>This action will check for any null strings in a SQLite database
            and if found substitute a true null value.
        </p>
    
        <pre class="tty cmd">wee_database --fix-strings</pre>

        <!-- ======== -->


        <h1 id="wee_debug_utility"><span class="code">wee_debug</span></h1>

        <p>Troubleshooting problems when running weeWX often involves analysis of a number of
            pieces of seemingly disparate system and weeWX related information. The <span
                    class="code">wee_debug</span> utility gathers all this information together into a single output to
            make troubleshooting easier. The <span class="code">wee_debug</span> utility is particularly useful for new
            users as the output may be redirected to a file then emailed or posted to a forum to assist in remote
            troubleshooting.</p>

        <p>Run the utility with the <span class="code">--help</span> option to see how it is used:</p>

        <pre class="tty cmd">wee_debug --help</pre>

        <p>This results in:</p>

        <pre class="tty">Usage: wee_debug --help
       wee_debug --info
            [CONFIG_FILE|--config=CONFIG_FILE]
            [--output|--output DEBUG_PATH]
            [--verbosity=0|1|2]
       wee_debug --version

Description:

Generate a standard suite of system/weewx information to aid in remote
debugging. The wee_debug output consists of two parts, the first part containing
a snapshot of relevant system/weewx information and the second part a parsed and
obfuscated copy of weewx.conf. This output can be redirected to file and posted
when seeking assistance via forums or email.

Actions:

--info           Generate a debug report.

Options:
  -h, --help            show this help message and exit
  --config=CONFIG_FILE  Use configuration file CONFIG_FILE.
  --info                Generate weewx debug output.
  --output              Write wee_debug output to DEBUG_PATH. DEBUG_PATH
                        includes path and file name. Default is
                        /var/tmp/weewx.debug.
  --verbosity=N         How much detail to display, 0-2, default=1.
  --version             Display wee_debug version number.

wee_debug will attempt to obfuscate obvious personal/private information in
weewx.conf such as user names, passwords and API keys; however, the user
should thoroughly check the generated output for personal/private information
before posting the information publicly.
</pre>

        <h2><span id='wee_debug_details'>Actions and options</span></h2>

        <h3>Option <span class="code">--config</span></h3>
        <p>
            The utility is pretty good about "guessing" where the configuration
            file <span class="code">weewx.conf</span> is, but if you've done
            an unusual install, you may have to tell it explicitly. You can do
            this by either putting the location directly in the command line:
        </p>

        <pre class="tty cmd">wee_debug /home/weewx/weewx.conf --info</pre>

        <p>or by using option <span class="code">--config</span>:</p>

        <pre class="tty cmd">wee_debug --config=/home/weewx/weewx.conf --info</pre>

        <h3>Action <span class="code">--info</span></h3>

        <p>This action generates a debug report which can be sent off for remote debugging.</p>

        <pre class="tty cmd">wee_debug --info</pre>

        <p class="warning"><strong>Warning!</strong><br/> The
            <span class="code">wee_debug</span> output includes a copy
            of the in use weeWX config file (usually
            <span class="code">weewx.conf</span>) and whilst
            <span class="code">wee_debug</span> attempts to obfuscate any
            personal or sensitive information in
            <span class="code">weewx.conf</span>, the user should carefully
            check the <span class="code">wee_debug</span> output for any
            remaining personal or sensitive information before
            emailing or posting the output publicly.</p>

        <p>This results in output something like this:</p>
            <pre class="tty">Using verbosity=1, displaying most info

wee_debug output will be sent to stdout(console)

Using configuration file /home/weewx/weewx.conf
Using database binding 'wx_binding', which is bound to database 'archive_mysql'

System info
  CPU implementer:        0x41
  Features:               half thumb fastmult vfp edsp java tls
  CPU architecture:       7
  BogoMIPS:               2.00
  Hardware:               BCM2708
  CPU revision:           7
  CPU part:               0xb76
  model name:             ARMv6-compatible processor rev 7 (v6l)
  Serial:                 000000009581b554
  processor:              0
  CPU variant:            0x0
  Revision:               000e

  Operating system:       debian 7.8
                          Linux rosella 4.1.6+ #810 PREEMPT Tue Aug 18 15:19:58 BST 2015 armv6l
  1 minute load average:  0.19
  5 minute load average:  0.15
  15 minute load average: 0.12

General weewx info
  Weewx version 3.2.1 detected.

Station info
  Station type: Simulator
  Driver:       weewx.drivers.simulator

Driver info
[Simulator]
    # This section is for the weewx weather station simulator

    # The time (in seconds) between LOOP packets.
    loop_interval = 2.5

    # The simulator mode can be either 'simulator' or 'generator'.
    # Real-time simulator. Sleep between each LOOP packet.
    mode = simulator
    # Generator.  Emit LOOP packets as fast as possible (useful for testing).
    #mode = generator

    # The start time. If not specified, the default is to use the present time.
    #start = 2011-01-01 00:00

    # The driver to use:
    driver = weewx.drivers.simulator

Currently installed extensions
Extension Name    Version   Description
Weewx-WD          1.2.0b1   Weewx support for Weather Display Live, SteelSeries Gauges and Carter Lake/Saratoga weather web site templates.

Archive info
  Database name:        weewx
  Table name:           archive
  Unit system:          16(METRIC)
  First good timestamp: 2013-01-01 00:00:00 AEST (1356962400)
  Last good timestamp:  2015-09-06 02:15:00 AEST (1441469700)
  Number of records:    281178
  weewx (weewx.conf) is set to use an archive interval of 300 seconds.
  The station hardware was not interrogated in determining archive interval.

Databases configured in weewx.conf
  Database name:        weewx
  Database driver:      weedb.mysql
  Database host:        localhost

  Database name:        wdsupp
  Database driver:      weedb.mysql
  Database host:        localhost

  Database name:        weewxwd
  Database driver:      weedb.mysql
  Database host:        localhost


Parsed and obfuscated weewx.conf
# WEEWX CONFIGURATION FILE
#
# Copyright (c) 2009-2015 Tom Keffer &lt;tkeffer@gmail.com&gt;
# See the file LICENSE.txt for your rights.

##############################################################################

# This section is for general configuration information.

... content removed for conciseness ...

#   This section configures the internal weewx engine.

[Engine]

    [[Services]]
        # This section specifies the services that should be run. They are
        # grouped by type, and the order of services within each group
        # determines the order in which the services will be run.
        prep_services = weewx.engine.StdTimeSynch
        data_services = ,
        process_services = weewx.engine.StdConvert, weewx.engine.StdCalibrate, weewx.engine.StdQC, weewx.wxservices.StdWXCalculate, user.weewxwd3.WdWXCalculate
        archive_services = weewx.engine.StdArchive, user.weewxwd3.WdArchive, user.weewxwd3.WdSuppArchive
        restful_services = weewx.restx.StdStationRegistry, weewx.restx.StdWunderground, weewx.restx.StdPWSweather, weewx.restx.StdCWOP, weewx.restx.StdWOW, weewx.restx.StdAWEKAS, user.sync.SyncService
        report_services = weewx.engine.StdPrint, weewx.engine.StdReport

################################################################################

wee_debug report successfully generated
</pre>

        <h3>Option <span class="code">--output</span></h3>

        <p>By default, <span class="code">wee_debug</span> sends its output to
            the system "standard output" (<span class="code">stdout</span>)
            unless the <span class="code">--output</span> option is used. </p>
        <p>The option <span class="code">--output</span> with no parameter
            sends output to the default file
            <span class="code">/var/tmp/weewx.debug</span>. Example:</p>

        <pre class="tty cmd">wee_debug --info --output</pre>

        <p>The option <span class="code">--output</span> with a specified file
            will send it to that file. Example:</p>

        <pre class="tty cmd">wee_debug --info --output /home/weewx/another.debug</pre>

        <h3>Option <span class="code">--verbosity</span></h3>

        <p>The amount of information included in the
            <span class="code">wee_debug</span> output can be changed using the
            <span class="code">--verbosity</span> option. The
            <span class="code">--verbosity</span> option can be set to
            0, 1 or 2 with each higher level successively displaying more
            information. The default level is 1. The
            information displayed for each level is:</p>

        <table class="indent">
            <tr class="first_row">
                <td>Level</td>
                <td>Included Information</td>
            </tr>
            <tr>
                <td class="text_highlight" rowspan=8><span class="code">--verbosity 0</span></td>
                <td>path and name of weeWX config file used (usually <span class="code">weewx.conf</span>)
                </td>
            </tr>
            <tr>
                <td>name of weeWX database binding used</td>
            </tr>
            <tr>
                <td>operating system version</td>
            </tr>
            <tr>
                <td>weeWX version number</td>
            </tr>
            <tr>
                <td>weeWX station type and driver name</td>
            </tr>
            <tr>
                <td>summary of currently installed extensions</td>
            </tr>
            <tr>
                <td>summary of weeWX archive</td>
            </tr>
            <tr>
                <td>parsed and obfuscated weeWX config file (usually <span class="code">weewx.conf</span>)
                </td>
            </tr>
            <tr>
                <td class="text_highlight" rowspan=5><span class="code">--verbosity 1</span></td>
                <td>as per <span class="code">--verbosity 0</span></td>
            </tr>
            <tr>
                <td>cpu info summary</td>
            </tr>
            <tr>
                <td>system load averages</td>
            </tr>
            <tr>
                <td>driver config extract from weeWX config file (usually <span class="code">weewx.conf</span>)
                </td>
            </tr>
            <tr>
                <td>summary of databases configured in weeWX config file (usually <span
                        class="code">weewx.conf</span>)
                </td>
            </tr>
            <tr>
                <td class="text_highlight" rowspan=3><span class="code">--verbosity 2</span></td>
                <td>as per <span class="code">--verbosity 1</span></td>
            </tr>
            <tr>
                <td>list of supported SQL keys</td>
            </tr>
            <tr>
                <td>list of supported observation types</td>
            </tr>
        </table>


        <!-- ======== -->


        <h1 id="wee_device_utility"><span class="code">wee_device</span></h1>

        <p>The utility <span class="code">wee_device</span> is used to configure hardware settings, such as rain bucket
            size, station archive interval, altitude, EEPROM constants, <i>etc.</i>, on your station. In order to do its
            job, it depends on optional code being present in the hardware driver. Because not all drivers have this
            code, it may not work for your specific device. If it does not, you will have to consult your manufacturer's
            instructions for how to set these things through your console or other means.</p>

        <p><span class="code">wee_device</span> uses the option <span class="code">station_type</span>
            in <span class="code">weewx.conf</span> to determine what device you are using and what options
            to display. Make sure it's set correctly before attempting to use this utility.</p>

        <p>Because <span class="code">wee_device</span> uses hardware-specific code, its options are different for every
            station type. You should run it with <span class="code">--help</span> to see how to use it for
            your specific station:</p>

        <p class="tty cmd">wee_device --help</p>

        <p>The utility requires a <span class='code'>weewx.conf</span> file. If no file is specified, it will look for
            <span class='code'>weewx.conf</span> in the standard location. If your configuration file is in a
            non-standard location, specify the path to the configuration file as the first argument. For example,</p>

        <p class="tty cmd">wee_device /path/to/weewx.conf --help</p>

        <p>For details about the options available for each type of hardware,
            see the appropriate hardware section:</p>
        <ul>
            <li><a href="hardware.htm#acurite_notes">AcuRite</a></li>
            <li><a href="hardware.htm#cc3000_notes">CC3000</a></li>
            <li><a href="hardware.htm#fousb_notes">FineOffsetUSB</a></li>
            <li><a href="hardware.htm#te923_notes">TE923</a></li>
            <li><a href="hardware.htm#ultimeter_notes">Ultimeter</a></li>
            <li><a href="hardware.htm#vantage_notes">Vantage</a></li>
            <li><a href="hardware.htm#wmr100_notes">WMR100</a></li>
            <li><a href="hardware.htm#wmr200_notes">WMR200</a></li>
            <li><a href="hardware.htm#wmr300_notes">WMR300</a></li>
            <li><a href="hardware.htm#wmr9x8_notes">WMR9x8</a></li>
            <li><a href="hardware.htm#ws1_notes">WS1</a></li>
            <li><a href="hardware.htm#ws23xx_notes">WS23xx</a></li>
            <li><a href="hardware.htm#ws28xx_notes">WS28xx</a></li>
        </ul>


        <!-- ======== -->


        <h1 id="wee_extension_utility"><span class="code">wee_extension</span></h1>

        <p>
            The utility <span class="code">wee_extension</span> is used to add
            and remove extensions. Use the <span class="code">--help</span>
            option to see how it is used: </p>

        <pre class="tty cmd">wee_extension --help</pre>

        <p>This results in:</p>

    <pre class="tty">
Usage: wee_extension --help
       wee_extension --list
           [CONFIG_FILE|--config=CONFIG_FILE]
       wee_extension --install=(filename|directory)
           [CONFIG_FILE|--config=CONFIG_FILE]
           [--tmpdir==DIR] [--dry-run] [--verbosity=N]
       wee_extension --uninstall=EXTENSION
           [CONFIG_FILE|--config=CONFIG_FILE]
           [--verbosity=N]

Install, list, and uninstall extensions to weewx.

Actions:

--list:      Show installed extensions.
--install:   Install the specified extension.
--uninstall: Uninstall the specified extension.

Options:
  -h, --help            show this help message and exit
  --list                Show installed extensions.
  --install=FILENAME|DIRECTORY
                        Install the extension contained in FILENAME or
                        DIRECTORY. FILENAME must be an archive that contains a
                        packaged extension such as pmon.tar.gz.  DIRECTORY is
                        the result of extracting that archive.
  --uninstall=EXTENSION
                        Uninstall the extension with name EXTENSION.
  --config=CONFIG_FILE  Use configuration file CONFIG_FILE.
  --tmpdir=DIR          Use temporary directory DIR.
  --bin-root=BIN_ROOT   Look in BIN_ROOT for weewx executables.
  --dry-run             Print what would happen but do not do it.
  --verbosity=N         How much status to display, 0-3
</pre>

        <h2><span id='wee_extensions_details'>Actions and options</span></h2>

        <h3>Action <span class="code">--install</span></h3>
        <p>Use this action to install an extension.  You must specify the
            path to a .zip archive, a .tgz/.tar.gz archive, or a directory.</p>

        <pre class='tty cmd'>wee_extension --install extensions/basic
wee_extension --install basic.tar.gz</pre>

        <h3>Action <span class="code">--list</span></h3>
        <p>This action will list all the extensions that you have
            installed.</p>

        <pre class='tty cmd'>wee_extension --list</pre>

        <h3>Action <span class="code">--uninstall</span></h3>

        <p>Use this action to remove an extension.  You must specify the
            name of the extension, without any version number or zip/tgz
            extension.</p>

        <pre class="tty cmd">wee_extension --uninstall=basic</pre>

        <h2>Example: install an extension</h2>

        <p>The <span class="code">wee_extension</span> utility makes a copy of
            any file or directory that it modifies or replaces. When
            installing, it creates a directory called
            <span class='code'>installer</span> in the
            <span class='code'>user</span> directory. The contents of the
            <span class='code'>installer</span> directory are used to
            enumerate and uninstall extensions.</p>

        <p>
            Let's try installing a simple extension, <a
                href="https://github.com/weewx/weewx/wiki/cmon"><em>cmon</em></a>, used to monitor your computer. </p>

        <p>
            First download it. You can either do this from the link given in the wiki, or by using <span class="code">wget</span>
            (which you may have to install): </p>
        <pre class="tty cmd">wget -P /var/tmp http://lancet.mit.edu/mwall/projects/weather/releases/weewx-cmon-0.7.tgz</pre>

        <p>
            This will put the tarfile <span class="code">weewx-cmon-0.7.tgz</span> in the directory <span class="code">/var/tmp</span>.
        </p>

        <p>Now install the extension:</p>
    <pre class="tty"><span class="cmd">wee_extension --install=/var/tmp/weewx-cmon-0.7.tgz</span>
Request to install '/var/tmp/weewx-cmon-0.7.tgz'
Extracting from tarball /var/tmp/weewx-cmon-0.7.tgz
Added new service user.cmon.ComputerMonitor to process_services
Saving installer file to /home/weewx/bin/user/installer/cmon
Saved configuration dictionary. Backup copy at /home/weewx/weewx.conf.20150430130322
Finished installing extension '/var/tmp/weewx-cmon-0.7.tgz'</pre>

        <p>The installer has done a number of things for you:</p>
        <ol>
            <li>It put a new skin, <span class="code">cmon</span>, in the <span class="code">skins</span> subdirectory;
            </li>
            <li>It put a new service, <span class="code">user.cmon.ComputerMonitor</span>, in the list of services to be
                run by weeWX;
            </li>
            <li>It defined a new database, <span class="code">cmon_sqlite</span>, and a binding, <span class="code">cmon_binding</span>,
                to that database;
            </li>
            <li>It added a top-level "stanza" <span class="code">[ComputerMonitor]</span> to your configuration file
                <span class="code">weewx.conf</span>, that specifies the data binding <span class="code">cmon</span> is
                to use.
            </li>
            <li>And, finally, it saved the details of how the extension was installed so you can remove it later, should
                you choose to do so.
            </li>
        </ol>

        <p>Now you can use the <span class="code">--list</span> action to
            see which extensions are installed:</p>

    <pre class="tty"><span class="cmd">wee_extension --list</span>
Extension Name   Version  Description
cmon             0.7      Collect and display computer health indicators</pre>
        <p>You can see that it listed the extension we just installed, <span class="code">cmon</span>.</p>

        <p>You can remove an extension using the
            <span class="code">--uninstall</span> action:</p>

    <pre class="tty"><span class="cmd">wee_extension --uninstall=cmon
wee_extension --list</span>
No extensions installed</pre>


        <!-- ======== -->


        <h1 id="wee_import_utility"><span class="code">wee_import</span></h1>


        <p>Some weeWX users will have historical data from another source (e.g., other weather
            station software or a manually compiled file) which they wish to import into weeWX.
            Such data can, depending upon the source, be imported using the <span class="code">wee_import</span>
            utility. This section details the use of the <span class="code">wee_import</span> utility. </p>

        <p>The <span class="code">wee_import</span> utility supports importing observational data from the following
            sources:</p>
        <ul>
            <li>a single Comma Separated Values (CSV) format file</li>
            <li>the historical observations of a Weather Underground personal weather station
            </li>
            <li>one or more Cumulus monthly log files</li>
        </ul>

        <p>Before starting, it's worth running the utility with the <span class="code">--help</span> flag to
            see how <span class="code">wee_import</span> is used:</p>

        <pre class="tty cmd">wee_import --help</pre>

        <p>This will result in an output that looks something like this:</p>

      <pre class="tty">Usage: wee_import --help
       wee_import --version
       wee_import --import-config=IMPORT_CONFIG_FILE
            [--config=CONFIG_FILE]
            [--date=YYYY-mm-dd | --from=YYYY-mm-dd[THH:MM] --to=YYYY-mm-dd[THH:MM]]
            [--dry-run]
            [--verbose]
            [--log=-]


Import observation data into a weewx archive.

Options:
  -h, --help            show this help message and exit
  --config=CONFIG_FILE  Use weewx configuration file CONFIG_FILE.
  --import-config=IMPORT_CONFIG_FILE
                        Use import configuration file IMPORT_CONFIG_FILE.
  --dry-run             Print what would happen but do not do it.
  --date=YYYY-mm-dd     Import data for this date. Format is YYYY-mm-dd.
  --from=YYYY-mm-dd[THH:MM]
                        Import data starting at this date or date-time. Format
                        is YYYY-mm-dd[THH:MM].
  --to=YYYY-mm-dd[THH:MM]
                        Import data up until this date or date-time. Format is
                        YYYY-mm-dd[THH:MM].
  --log=-               Control wee_import log output. By default log output
                        is sent to the weewx log file. Log output may be
                        disabled by using '--log=-'. Some weewx API log output
                        cannot be controlled by wee_import and will be sent to
                        the default log file irrespective of the '--log'
                        option.
  --verbose             Print useful extra output.
  --version             Display wee_import version number.

wee_import will import data from an external source into a weewx
archive. Daily summaries are updated as each archive record is
imported so there should be no need to separately rebuild the daily
summaries using the wee_database utility.</pre>

        <h2><span id='wee_import_details'>Actions and options</span></h2>

        <p>The <span class="code">wee_import</span> actions and options are described in more detail below:</p>

        <h3>Option <span class="code">--config</span></h3>

        <p>The utility is pretty good at "guessing" where your configuration file <span class="code">weewx.conf</span>
            is, but if you've done an unusual install, you may have to tell it explicitly. You can do this by using the
            <span class="code">--config</span> option:</p>

    <pre class="tty cmd">wee_import --config=/this/folder/weewx.conf --import-config=/folder/import.conf
</pre>

        <h3>Option <span class="code">--import-config</span></h3>

        <p><span class="code">wee_import</span> uses a secondary configuration file to store various import parameters.
            The <span class="code">--import-config</span> option is mandatory for all imports.
            Example import configuration files for each type of import supported by <span class="code">wee_import</span>
            are provided in the <span class="code">util/import</span> folder. These example files are best used by
            making a copy of the applicable example file in a working directory and then modifying the duplicate file to
            suit your needs. The <span class="code">--import-config</span> option is used as
            follows:</p>

    <pre class="tty cmd">wee_import --import-config=/folder/import.conf
</pre>

        <h3>Option <span class="code">--dry-run</span></h3>

        <p>The inclusion of the <span class="code">--dry-run</span> option will cause the import
            to proceed but no actual data will be saved to the database. This is a useful option to use when first
            importing data.</p>

    <pre class="tty cmd">wee_import --import-config=/folder/import.conf --dry-run
</pre>

        <h3>Option <span class="code">--date</span></h3>

        <p>Records from a single date can be imported by use of the <span class="code">--date</span> option. 
            The <span class="code">--date</span> option accepts strings of the format <span class="code">YYYY-mm-dd</span>. 
            Whilst the use of the <span class="code">--date</span> option will limit the imported data to that of a single 
            date, the default action if the <span class="code">--date</span> option (and the <span class="code">--from</span> 
            and <span class="code">--to</span> options) is omitted may vary depending on the source. The operation of 
            the <span class="code">--date</span> option is summarised in the following table:</p>
        
        <table class="indent" summary="--date_option operation">
            <tbody>
            <tr class="first_row">
                <td>option</td>
                <td>Records imported for a CSV or Cumulus import</td>
                <td>Records imported for a Weather Underground import</td>
            </tr>
            <tr>
                <td class="code first_col">omitted<br>(i.e., the default)</td>
                <td>All available records</td>
                <td>Todays records only</td>
            </tr>
            <tr>
                <td class="code first_col">--date=2015-12-22</td>
                <td>All records from 2015-12-22 00:00 (inclusive) to 2015-12-23 00:00 (exclusive)</td>
                <td>All records from 2015-12-22 00:00 (inclusive) to 2015-12-23 00:00 (exclusive)</td>
            </tr>
            </tbody>
        </table>
        
        <p class="note">
            <strong>Note</strong><br/>If the <span class="code">--date</span>, <span class="code">--from</span>
            and <span class="code">--to</span> options are omitted the default is to import all available records 
            when importing from a CSV or Cumulus source or to import today's records only when importing from 
            Weather Underground. </p>

        <h3>Options <span class="code">--from</span> and <span class="code">--to</span></h3>

        <p>Whilst the <span class="code">--date</span> option allows imported data to be limited to a single 
            date, the <span class="code">--from</span> and <span class="code">--to</span> options allow finer 
            control by importing only the records that fall within the date or date-time range specified by the 
            <span class="code">--from</span> and <span class="code">--to</span> options. 
            The <span class="code">--from</span> option determines the earliest (inclusive), and 
            the <span class="code">--to</span> option determines the latest (exclusive), date or date-time of 
            the records being imported. The <span class="code">--from</span> and <span class="code">--to</span> 
            options accept a string of the format <span class="code">YYYY-mm-dd[THH:MM]</span>. The T literal 
            is mandatory if specifying a date-time.</p>
        
        <p class="note">
            <strong>Note</strong><br/>The <span class="code">--from</span> and <span class="code">--to</span> 
            options must be used as a pair, they cannot be used individually or in conjunction with 
            the <span class="code">--date</span> option.</p>

        <p>The operation of the <span class="code">--from</span> and <span class="code">--to</span> options is 
            summarised in the following table:</p>
      
        <table class="indent" summary="--from_to_option operation">
            <tbody>
            <tr class="first_row">
                <td colspan='2'>options</td>
                <td>Records imported for a CSV or Cumulus import</td>
                <td>Records imported for a Weather Underground import</td>
            </tr>
            <tr>
                <td class="code first_col">omitted<br>(i.e., the default)</td>
                <td class="code first_col">omitted<br>(i.e., the default)</td>
                <td>All available records</td>
                <td>Todays records only</td>
            </tr>
            <tr>
                <td class="code first_col">--from=2015-12-22</td>
                <td class="code first_col">--to=2015-12-29</td>
                <td>All records from 2015-12-22 00:00 (inclusive) to 2015-12-30 00:00 (exclusive)</td>
                <td>All records from 2015-12-22 00:00 (inclusive) to 2015-12-30 00:00 (exclusive)</td>
            </tr>
            <tr>
                <td class="code first_col">--from=2016-7-18T15:29</td>
                <td class="code first_col">--to=2016-7-25</td>
                <td>All records from 2016-7-18 15:29 (inclusive) to 2016-7-26 22:00 (exclusive)</td>
                <td>All records from 2016-7-18 15:29 (inclusive) to 2016-7-26 22:00 (exclusive)</td>
            </tr>
            <tr>
                <td class="code first_col">--from=2016-5-12</td>
                <td class="code first_col">--to=2016-7-22T22:15</td>
                <td>All records from 2016-5-12 00:00 (inclusive) to 2016-7-22 22:15 (exclusive)</td>
                <td>All records from 2016-5-12 00:00 (inclusive) to 2016-7-22 22:15 (exclusive)</td>
            </tr>
            <tr>
                <td class="code first_col">--from=2016-3-18T15:29</td>
                <td class="code first_col">--to=2016-6-20T22:00</td>
                <td>All records from 2016-3-18 15:29 (inclusive) to 2016-6-20 22:00 (exclusive)</td>
                <td>All records from 2016-3-18 15:29 (inclusive) to 2016-6-20 22:00 (exclusive)</td>
            </tr>
            </tbody>
        </table>

        <p class="note">
            <strong>Note</strong><br/>If the <span class="code">--date</span>, <span class="code">--from</span>
            and <span class="code">--to</span> options are omitted the default is to import all available records 
            when importing from a CSV or Cumulus source or to import today's records only when importing from 
            Weather Underground. </p>

        <h3>Option <span class="code">--log</span></h3>

        <p>The <span class="code">--log</span> option controls the <span class="code">wee_import</span> log
            output. Omitting the option will result in <span class="code">wee_import</span> log output being sent to the
            weeWX log file (nominally the system log, refer to <em><a
                    href="usersguide.htm#monitoring">Monitoring weeWX</a></em> and <em><a
                    href="usersguide.htm#Where_to_find_things">Where to find things</a></em> to find it). <span
                    class="code">wee_import</span> log output can be disabled by using <span class="code">--log=-</span>.
            The <span class="code">--log</span> option is used as follows: </p>

    <pre class="tty cmd">wee_import --import-config=/folder/import.conf --log=-
</pre>

        <h3>Option <span class="code">--verbose</span></h3>

        <p>Inclusion of the <span class="code">--verbose</span> option will cause additional
            information to be printed during <span class="code">wee_import</span> execution.</p>

    <pre class="tty cmd">wee_import --import-config=/folder/import.conf --verbose
</pre>

        <h2 id='import_config'>The import configuration file</h2>

        <p><span class="code">wee_import</span> requires a second configuration file, the import configuration file, in
            addition to the standard weeWX configuration file. The import configuration file specifies the import type
            and various options associated with each type of import. The import configuration file is specified using the mandatory <span
                    class="code">--import-config</span> option. How you construct the import configuration 
            file is up to you; however, the recommended method is to copy one of the example import configuration files 
            located in the <span class="code">util/import</span> folder, modify the configuration options in the newly 
            copied file to suit the import to be performed and then use this file as the import configuration file. </p>

        <p>Following is the definitive guide to the options available in the import configuration file. Default values
            are provided for a number of options, meaning that if they are not listed in the import configuration file
            at all <span class="code">wee_import</span> will pick sensible values. When the documentation below gives a
            "default value" this is what it means. What follows is organized by the different sections of the import
            configuration file. </p>

        <h3 class="config_section">General</h3>

        <h4 class='config_option' id='import_config_source'>source</h4>

        <p>The <span class="code">source</span> option determines the type of import to be performed by <span
                class="code">wee_import</span>. The option must be set to one of the following: </p>

        <ul>
            <li><span class="code">CSV</span> to import from a single CSV format file.
            </li>
            <li><span class="code">WU</span> to import from a Weather Underground PWS daily history.
            </li>
            <li><span class="code">Cumulus</span> to import from one or more Cumulus monthly log files.
            </li>
        </ul>
        <p>There is no default.</p>

        <h3 class="config_section">[CSV]</h3>

        <p>The <span class="config_section">[CSV]</span> section contains the options relating to the import of
            observational data from a CSV format file. </p>

        <h4 class='config_option' id='csv_file'>file</h4>

        <p>The file containing the CSV format data to be used as the source during the import. Include full path and
            filename. There is no default. </p>

        <h4 class='config_option' id='csv_interval'>interval</h4>

        <p>Determines how the time interval (weeWX archive table field <span class="code">interval</span>)
            between successive observations is derived. The interval can be derived by one of three methods: </p>

        <ul>
            <li>The interval can be calculated as the time, rounded to the nearest minute, between the date-time of
                successive records. This method is suitable when the data was recorded at fixed intervals and there are
                NO missing records in the source data. Use of this method when there are missing records in the source
                data can compromise the integrity of the weeWX statistical data. Select this
                method by setting <span class="code">interval = derive</span>.
            </li>
            <li>The interval can be set to the same value as the <span class="code">archive_interval</span> setting
                under <span class="code">[StdArchive]</span> in <span class="code">weewx.conf</span>. This setting is
                useful if the data was recorded at fixed intervals but there are some missing records and the fixed
                interval is the same as the <span class="code">archive_interval</span> setting under <span 
                        class="code">[StdArchive]</span> in <span class="code">weewx.conf</span>. Select this method 
                by setting <span class="code">interval = conf</span>.
            </li>
            <li>The interval can be set to a fixed number of minutes. This setting is useful if the source data was
                recorded at fixed intervals but there are some missing records and the fixed interval is different to
                the <span class="code">archive_interval</span> setting under <span class="code">[StdArchive]</span> in
                <span class="code">weewx.conf</span>. Select this method by setting <span class="code">interval = x</span> 
                where <span class="code">x</span> is an integer number of minutes.
            </li>
        </ul>

        <p>The default value is <span class="code">derive</span>. If the CSV source data records are equally spaced in
            time, but some records are missing, then a better result may be achieved using <span class="code">conf</span>
            or a fixed interval setting. </p>

        <h4 class='config_option' id='csv_qc'>qc</h4>

        <p>Determines whether simple quality control checks are applied to imported data. Setting <span 
                    class="code">qc = True</span> will result in <span class="code">wee_import</span> applying 
            the weeWX <span class="code">StdQC</span> minimum and maximum checks to any imported 
            observations. <span class="code">wee_import</span> quality control checks use the same configuration settings, and
            operate in the same manner, as the <a href="usersguide.htm#StdQC"><span class="code">StdQC</span></a>
            service. For example, for minimum/maximum quality checks, if an observation falls outside of the quality 
            control range for that observation, then the observation will be set to <span class="code">None</span>. In such 
            cases you will be alerted through a short message similar to:</p>

        <pre class="tty">2016-01-12 10:00:00 AEST (1452556800) record value 'outTemp' 194.34 outside limits (0.0, 120.0)
</pre>

        <p>As derived observations are calculated after the quality control check is applied, derived observations are
            not subject to quality control checks. Setting <span class="code">qc = False</span> will result in <span
                    class="code">wee_import</span> not applying quality control checks to imported data. The default is
            <span class="code">True</span>. </p>

        <h4 class='config_option' id='csv_calc_missing'>calc_missing</h4>

        <p>Determines whether any missing derived observations will be calculated from the imported data. Setting <span
                class="code">calc_missing = True</span> will result in <span class="code">wee_import</span> using the
            weeWX <span class="code">StdWXCalculate</span> service to calculate any missing
            derived observations from the imported data. Setting <span class="code">calc_missing = False</span> will
            result in weeWX leaving any missing derived observations as <span class="code">None</span>.
            The observations that <span class="code">StdWXCalculate</span> can calculate are listed in the <a
                    href="usersguide.htm#StdWXCalculate">[StdWXCalculate]</a> section of the <a href="usersguide.htm">User's
                Guide</a>. The default is <span class="code">True</span>. </p>

        <h4 class='config_option' id='csv_tranche'>tranche</h4>

        <p>To speed up database operations imported records are committed to database in groups of records rather than
            individually. The size of the group is set by the <span class="code">tranche</span> parameter. Increasing
            the <span class="code">tranche</span> parameter may result in a slight speed increase but at the expense of
            increased memory usage. Decreasing the <span class="code">tranche</span> parameter will result in less
            memory usage but at the expense of more frequent database access and likely increased time to import. The
            default is <span class="code">250</span> which should suit most users. </p>

        <h4 class='config_option' id='csv_UV'>UV_sensor</h4>

        <p>WeeWX records a <span class="code">None/NULL</span> for UV when no UV sensor is
            installed, whereas some weather station software records a value of 0 for UV index when there is no UV
            sensor installed. The <span class="code">UV_sensor</span> parameter enables <span
                    class="code">wee_import</span> to distinguish between the case where a UV sensor is present and the
            UV index is 0 and the case where no UV sensor is present and UV index is 0. <span 
                    class="code">UV_sensor = False</span> should be used when no UV sensor was used in producing 
            the source data. <span class="code">UV_sensor = False</span> will result in <span 
                    class="code">None/Null</span> being recorded in the weeWX archive field <span 
                    class="code">UV</span> irrespective of any UV observations in the source data. <span 
                    class="code">UV_sensor = True</span> should be used when a UV sensor was used in producing 
            the source data. <span class="code">UV_sensor = True</span> will result in UV observations in the 
            source data being stored in the weeWX archive field <span class="code">UV</span>. 
            The default is <span class="code">True</span>. </p>

        <h4 class='config_option' id='csv_solar'>solar_sensor</h4>

        <p>WeeWX records a <span class="code">None/NULL</span> when no solar radiation sensor
            is installed, whereas some weather station software records a value of 0 for solar radiation when there is
            no solar radiation sensor installed. The <span class="code">solar_sensor</span> parameter enables <span
                    class="code">wee_import</span> to distinguish between the case where a solar radiation sensor is
            present and solar radiation is 0 and the case where no solar radiation sensor is present and solar radiation
            is 0. <span class="code">solar_sensor = False</span> should be used when no solar radiation sensor was used
            in producing the source data. <span class="code">solar_sensor = False</span> will result in <span
                    class="code">None/Null</span> being recorded in the weeWX archive field
            <span class="code">radiation</span> irrespective of any solar radiation observations in the source data.
            <span class="code">solar_sensor = True</span> should be used when a solar radiation sensor was used in
            producing the source data. <span class="code">solar_sensor = True</span> will result in solar radiation
            observations in the source data being stored in the weeWX archive field <span
                    class="code">radiation</span>. The default is <span class="code">True</span>. </p>

        <h4 class='config_option' id='csv_raw_datetime_format'>raw_datetime_format</h4>

        <p>WeeWX records each record with a unique unix epoch timestamp, whereas many weather
            station applications or web sources export observational data with a human readable date-time. This human
            readable date-time is interpreted according to the format set by the <span class="code">raw_datetime_format</span>
            option. This option consists of <em> <a
                    href="https://docs.python.org/2/library/datetime.html#strftime-and-strptime-behavior">Python
                strptime() format codes</a> </em> and literal characters to represent the date-time data being imported.
            For example, if the source data uses the format 23 January 2015 15:34 then the appropriate setting for <span
                    class="code">raw_datetime_format</span> would be <span class="code">%d %B %Y %H:%M</span>,
            9:25:00 12/28/16 would use <span class="code">%H:%M:%S %m/%d/%y</span>. If the source data provides a unix
            epoch timestamp as the date-time field then the unix epoch timestamp is used directly and the <span
                    class="code">raw_datetime_format</span> option is ignored. The default is <span
                    class="code">%Y-%m-%d %H:%M:%S</span>. </p>

        <h4 class='config_option' id='csv_rain'>rain</h4>

        <p>WeeWX records rainfall as the amount of rain in the preceding archive period, so
            for a 5 minute archive period the rain field in each archive record would contain the total rain that fell
            in the previous 5 minutes. Many weather station applications provide a daily or yearly total. <span
                    class="code">wee_import</span> can derive the weeWX <span class="code">rain</span>
            field in one of two ways: </p>

        <ul>
            <li>If the imported rain data is a running total then <span class="code">wee_import</span> can derive the
                <span class="code">weewx rain</span> field from successive totals. For this method use <span
                        class="code">rain = cumulative</span>.
            </li>

            <li>If the imported rain data is a discrete value per date-time period then <span class="code">rain = discrete</span>
                should be used.
            </li>
        </ul>


        <p class="note">
            <strong>Note</strong><br/><span class="code">wee_import</span> only supports cumulative rainfall data that resets on a
            midnight boundary, cumulative rainfall data that resets at some other time; e.g., 9am, is not supported. In
            such cases the rainfall data will need to be converted to either reset on a midnight boundary or a discrete
            value per date-time period and <span class="code">rain = discrete</span> used. The former may be
            possible by selecting another rainfall field (if available) in the source data, otherwise it will require
            manual manipulation of the source data. </p>

        <h4 class='config_option' id='csv_wind_direction'>wind_direction</h4>

        <p>WeeWX records wind direction in degrees as a number from 0 to 360 inclusive (no
            wind direction is recorded as <span class="code">None/NULL</span>), whereas some data sources may provide
            wind direction as number over a different range (e.g., -180 to +180) or may use a particular value when
            there is no wind direction (e.g., 0 may represent no wind direction and 360 may represent a northerly wind,
            or -9999 (or some similar clearly invalid number) to represent there being no wind direction). <span
                    class="code">wee_import</span> handles such variations in data by defining a range over which
            imported wind direction values are accepted. Any value outside of this range is treated as there being no
            wind direction and is recorded as <span class="code">None/NULL</span>. Any value inside the range is
            normalised to the range 0 to 360 inclusive (e.g., -180 would be normalised to 180). The <span
                    class="code">wind_direction</span> option consists of two comma separated numbers of the
            format lower, upper where lower and upper are inclusive. The operation of the <span class="code">wind_direction</span>
            option is best illustrated through the following table: </p>

        <table class="indent" style="width:50%" summary="wind_direction operation">
            <tbody>
            <tr class="first_row">
                <td><span class="code">wind_direction</span> option setting</td>
                <td>Source data wind direction value</td>
                <td>Imported wind direction value</td>
            </tr>
            <tr>
                <td class="code first_col" rowspan='7'>0, 360</td>
                <td>0</td>
                <td>0</td>
            </tr>
            <tr>
                <td>160</td>
                <td>160</td>
            </tr>
            <tr>
                <td>360</td>
                <td>360</td>
            </tr>
            <tr>
                <td>500</td>
                <td><span class="code">None/NULL</span></td>
            </tr>
            <tr>
                <td>-45</td>
                <td><span class="code">None/NULL</span></td>
            </tr>
            <tr>
                <td>-9999</td>
                <td><span class="code">None/NULL</span></td>
            </tr>
            <tr>
                <td>No data</td>
                <td><span class="code">None/NULL</span></td>
            </tr>
            <tr>
                <td class="code first_col" rowspan='7'>-360, 360</td>
                <td>0</td>
                <td>0</td>
            </tr>
            <tr>
                <td>160</td>
                <td>160</td>
            </tr>
            <tr>
                <td>360</td>
                <td>360</td>
            </tr>
            <tr>
                <td>500</td>
                <td><span class="code">None/NULL</span></td>
            </tr>
            <tr>
                <td>-45</td>
                <td>315</td>
            </tr>
            <tr>
                <td>-9999</td>
                <td><span class="code">None/NULL</span></td>
            </tr>
            <tr>
                <td>No data</td>
                <td><span class="code">None/NULL</span></td>
            </tr>
            <tr>
                <td class="code first_col" rowspan='7'>-180, 180</td>
                <td>0</td>
                <td>0</td>
            </tr>
            <tr>
                <td>160</td>
                <td>160</td>
            </tr>
            <tr>
                <td>360</td>
                <td><span class="code">None/NULL</span></td>
            </tr>
            <tr>
                <td>500</td>
                <td><span class="code">None/NULL</span></td>
            </tr>
            <tr>
                <td>-45</td>
                <td>315</td>
            </tr>
            <tr>
                <td>-9999</td>
                <td><span class="code">None/NULL</span></td>
            </tr>
            <tr>
                <td>No data</td>
                <td><span class="code">None/NULL</span></td>
            </tr>
            </tbody>
        </table>

        <p>The default is <span class="code">0, 360</span>. </p>

        <h4 class='config_option' id='csv_fieldmap'>[[FieldMap]]</h4>

        <p>The <span class='code'>[[FieldMap]]</span> stanza defines the mapping from the source data fields to
            weeWX archive fields. The map consists of one row per field using the format: </p>

    <pre class="tty">weewx_archive_field_name = csv_field_name, weewx_unit_name
</pre>

        <p>Where <span class="code">weewx_archive_field_name</span> is a database field name in the <span
                class="code">weewx</span> archive table schema, <span class="code">csv_field_name</span> is the
            name of a field from the CSV file and <span class="code">weewx_unit_name</span> is the
            weeWX unit name of the units used by <span
                    class="code">csv_field_name</span>. This mapping allows <span
                    class="code">wee_import</span> to take a source data field, do the appropriate unit conversion and
            store the resulting value in the appropriate weeWX archive field. A mapping is not
            required for every weeWX archive field (e.g., the source may not provide inside
            temperature so no <span class="code">inTemp</span> field mapping is required) and neither does every CSV
            field need to be included in a mapping (e.g., the source data field <span class="code">monthrain</span> may
            have no use if the source data field <span class="code">dayrain</span> provides the data for the
            weeWX archive <span class="code">rain</span> field). Unused field mapping lines
            will not be used and may be omitted. </p>

        <p class="note">
            <strong>Note</strong><br/>Any weeWX archive fields that are derived (e.g., <span
                class="code">dewpoint</span>) and for which there is no field mapping may be calculated during import by
            use of the <span class="code">calc_missing</span> option in the <span class="config_section">[CSV]</span>
            section of the import configuration file. </p>

        <h3 class="config_section">[WU]</h3>

        <p>The <span class="config_section">[WU]</span> section contains the options relating to the import of
            observational data from a Weather Underground PWS daily history. </p>

        <h4 class='config_option' id='wu_station_id'>station_id</h4>

        <p>The Weather Underground weather station ID of the PWS from which the daily history will be imported. There is
            no default. </p>

        <h4 class='config_option' id='wu_interval'>interval</h4>

        <p>Determines how the time interval (weeWX database field <span
                class="code">interval</span>) between successive observations is determined. This option is identical in
            operation to the CSV <em><a href="#csv_interval">interval</a></em> option but applies to Weather Underground
            imports only. As Weather Underground often skips observation records when responding to a daily history
            query, the use of <span class="code">interval = derive</span> may give incorrect or inconsistent
            interval values. Better results may be obtained by using <span class="code">interval = conf</span>
            if the current weeWX installation has the same <span
                    class="code">archive_interval</span> as the Weather Underground data, or by using <span
                    class="code">interval = x</span> where <span class="code">x</span> is the time
            interval in minutes used to upload the Weather Underground data. The most appropriate setting will depend on
            the completeness and (time) accuracy of the Weather Underground data being imported. </p>

        <p>The default is <span class="code">derive</span>.</p>

        <h4 class='config_option' id='wu_qc'>qc</h4>

        <p>Determines whether simple quality control checks are applied to imported data. This option is identical in
            operation to the CSV <em><a href="#csv_qc">qc</a></em> option but applies to Weather Underground imports
            only. As Weather Underground imports at times contain nonsense values, particularly for fields for which no
            data was uploaded to Weather Underground by the PWS, the use of quality control checks on imported data can
            prevent these nonsense values from being imported and contaminating the weeWX
            database. The default is <span class="code">True</span>. </p>

        <h4 class='config_option' id='wu_calc_missing'>calc_missing</h4>

        <p>Determines whether any missing derived observations will be calculated from the imported data. This option is
            identical in operation to the CSV <em><a href="#csv_calc_missing">calc_missing</a></em> option but applies
            to Weather Underground imports only. The default is <span class="code">True</span>. </p>

        <h4 class='config_option' id='wu_tranche'>tranche</h4>

        <p>The number of records written to the weeWX database in each transaction. This
            option is identical in operation to the CSV <em><a href="#csv_tranche">tranche</a></em> option but applies
            to Weather Underground imports only. The default is <span class="code">250</span> which should suit most
            users. </p>

        <h4 class='config_option' id='wu_wind_direction'>wind_direction</h4>

        <p>Determines the range of acceptable wind direction values in degrees. This option is identical in operation to
            the CSV <em><a href="#csv_wind_direction">wind_direction</a></em> option but applies to Weather Underground
            imports only. The default is <span class="code">0, 360</span> which should suit most users. </p>

        <h3 class="config_section">[Cumulus]</h3>

        <p>The <span class="config_section">[Cumulus]</span> section contains the options relating to the import of
            observational data from Cumulus monthly log files. </p>

        <h4 class='config_option' id='cumulus_directory'>directory</h4>

        <p>The full path to the directory containing the Cumulus monthly log files to be imported. Do not include a
            trailing /. There is no default. </p>

        <h4 class='config_option' id='cumulus_interval'>interval</h4>

        <p>Determines how the time interval (weeWX database field <span
                class="code">interval</span>) between successive observations is determined. This option is identical in
            operation to the CSV <em><a href="#csv_interval">interval</a></em> option but applies to Cumulus monthly log
            file imports only. As Cumulus monthly log files can, at times, have missing entries, the use of <span
                    class="code">interval = derive</span> may give incorrect or inconsistent interval values.
            Better results may be obtained by using <span class="code">interval = conf</span> if the <span
                    class="code">archive_interval</span> for the current weeWX
            installation is the same as the Cumulus 'data log interval' setting used to generate the Cumulus monthly log
            files, or by using <span class="code">interval = x</span> where <span
                    class="code">x</span> is the time interval in minutes used as the Cumulus 'data log
            interval' setting. The most appropriate setting will depend on the completeness and (time) accuracy of the
            Cumulus data being imported. </p>

        <p>The default is <span class="code">derive</span>.</p>

        <h4 class='config_option' id='cumulus_qc'>qc</h4>

        <p>Determines whether simple quality control checks are applied to imported data. This option is identical in
            operation to the CSV <em><a href="#csv_qc">qc</a></em> option but applies to Cumulus imports only. The
            default is <span class="code">True</span>. </p>

        <h4 class='config_option' id='cumulus_calc_missing'>calc_missing</h4>

        <p>Determines whether any missing derived observations will be calculated from the imported data. This option is
            identical in operation to the CSV <em><a href="#csv_calc_missing">calc_missing</a></em> option but applies
            to Cumulus imports only. The default is <span class="code">True</span>. </p>

        <h4 class='config_option' id='cumulus_separator'>separator</h4>

        <p>The character used as the date field separator in the Cumulus monthly log file. A solidus (/) is frequently
            used but it may be another character depending on the settings on the machine that produced the Cumulus monthly
            log files. This parameter must be included in quotation marks. Default is <span class="code">'/'</span>.
        </p>

        <h4 class='config_option' id='cumulus_delimiter'>delimiter</h4>

        <p>The character used as the field delimiter in the Cumulus monthly log file. A comma is frequently used but it
            may be another character depending on the settings on the machine that produced the Cumulus monthly log
            files. This parameter must be included in quotation marks. Default is <span class="code">','</span>.
        </p>

        <h4 class='config_option' id='cumulus_decimal'>decimal</h4>

        <p>The character used as the decimal point in the Cumulus monthly log files. A full stop is frequently used but
            it may be another character depending on the settings on the machine that produced the Cumulus monthly log
            files. This parameter must be included in quotation marks. Default is <span class="code">'.'</span>.
        </p>

        <h4 class='config_option' id='cumulus_tranche'>tranche</h4>

        <p>The number of records are written to the weeWX database in each transaction. This
            option is identical in operation to the CSV <em><a href="#csv_tranche">tranche</a></em> option but applies
            to Cumulus monthly log file imports only. The default is <span class="code">250</span> which should
            suit most users. </p>

        <h4 class='config_option' id='cumulus_UV'>UV_sensor</h4>

        <p>Enables <span class="code">wee_import</span> to distinguish between the case where a UV sensor is present and 
            the UV index is 0 and the case where no UV sensor is present and UV index is 0. This option is identical in 
            operation to the CSV <em><a href="#csv_UV">UV_sensor</a></em> option but applies to Cumulus monthly log file 
            imports only. The default is <span class="code">True</span>. </p>

        <h4 class='config_option' id='cumulus_solar'>solar_sensor</h4>

        <p>Enables <span class="code">wee_import</span> to distinguish between the case where a solar radiation sensor 
            is present and the solar radiation is 0 and the case where no solar radiation sensor is present and solar 
            radiation is 0. This option is identical in operation to the CSV <em><a href="#csv_solar">solar_sensor</a></em>
            option but applies to Cumulus monthly log file imports only. The default is <span class="code">True</span>. </p>

        <h4 class='config_option' id='cumulus_units'>[[Units]]</h4>

        <p>The <span class="code">[[Units]]</span> stanza defines the units used in the Cumulus monthly log
            files. Units settings are required for <span class="code">temperature</span>, <span
                    class="code">pressure</span>, <span class="code">rain</span> and <span class="code">speed</span>.
            The format for each setting is: </p>

    <pre class="tty">obs_type = weewx_unit_name
</pre>

        <p>Where <span class="code">obs_type</span> is one of <span class="code">temperature</span>, <span class="code">pressure</span>,
            <span class="code">rain</span> or <span class="code">speed</span> and <span
                    class="code">weewx_unit_name</span> is the weeWX unit name of the units
            used by that particular <span class="code">obs_type</span>. As Cumulus supports a different suite of
            possible units only a subset of the available weeWX unit names can be used for
            some settings. </p>

        <h2>Importing from CSV files</h2>

        <p><span class="code">wee_import</span> can import data from a single CSV file. The CSV source file must be
            structured as follows:</p>

        <ul>
            <li>The file must have a header row consisting of a comma separated list of field names. The field names can
                be any valid string as long as each field name is unique within the list. There is no requirement for
                the field names to be in any particular order as long as the same order is used for the observations on
                each row in the file. These field names will be mapped to weeWX field names in
                the <span class="code">[CSV]</span> section of the import configuration file.
            </li>

            <li>Observation data for a given date-time must be listed on a single line with individual fields separated
                by a comma. The fields must be in the same order as the field names in the header row.
            </li>

            <li>Blank fields are represented by the use of white space or no space only between commas.
            </li>

            <li>There must a field that represents the date-time of the observations on each line. This date-time field
                must be either a Unix epoch timestamp or any date-time format that can be represented using <em> <a
                        href="https://docs.python.org/2/library/datetime.html#strftime-and-strptime-behavior">Python
                    strptime() format codes</a></em>.
            </li>
        </ul>

        <p>A CSV file suitable for import by <span class="code">wee_import</span> may look like this:</p>

        <pre class="tty">Time,Temp,Dewpoint,Press,WindDir,WindSpeed,WindGust,Hum,dailyrain,SolarRad
2016-02-01 00:00:00,13.5,9.2,1005.6,359,0.0,0.0,75,12.0,0.00
2016-02-01 00:05:00,13.4,9.3,1005.6,355,0.0,0.0,76,12.0,0.00
2016-02-01 00:10:00,13.3,9.4,1005.6,259,0.0,1.6,77,14.0,0.00
2016-02-01 00:20:00,13.2,9.4,1005.6,10,0.0,1.6,78,16.0,0.00
2016-02-01 00:25:00,13.2,9.6,1005.6,15,0.0,1.6,79,20.0,0.00
2016-02-01 00:30:00,13.1,9.6,1005.3,13,0.0,0.0,79,20.0,0.00
2016-02-01 00:35:00,13.1,9.7,1005.3,22,1.6,3.2,80,20.0,0.00
2016-02-01 00:40:00,13.0,9.6,1005.3,25,0.0,1.6,80,22.0,0.00
2016-02-01 00:45:00,12.9,9.8,1005.3,22,1.6,3.2,81,23.0,0.00
2016-02-01 00:50:00,12.9,9.7,1005.3,22,1.6,1.6,81,23.0,0.00</pre>

        <h3>Mapping data to archive fields</h3>

        <p>The weeWX archive fields populated during a CSV import depend on the CSV-to-weeWX
            field mappings specified in <span class="code">[CSV]</span> section in the
            import configuration file. If a valid field mapping exists, the weeWX field exists
            in the weeWX archive table schema and provided the mapped CSV field contains valid
            data, then the corresponding weeWX field will populated. Note that the CSV import
            is the only import supported by <span class="code">wee_import</span> that allows any weeWX
            archive field to be populated. </p>

        <p class="note">
            <strong>Note</strong><br/>The use of the <span class="code"><a
                href="#csv_calc_missing">calc_missing</a></span> option in the import configuration file may result in a
            number of derived fields being calculated from the imported data. If these derived fields exist in the
            in-use database schema they will be saved to the database as well. </p>

        <h3>Step-by-step instructions</h3>

        <p>To import observations from a CSV file:</p>

        <ol>
            <li>Ensure the source data file is in a folder accessible by the machine that will run <span class="code">wee_import</span>.
                For the purposes of these instructions the source data file <span class="code">data.csv</span> located
                in the <span class="code">/var/tmp</span> folder will be used.
            </li>

            <li>Make a backup of the weeWX database in case the import should go awry.
            </li>

            <li>Create an import configuration file. In this case we will make a copy of the example CSV import
                configuration file and save it as <span class="code">csv.conf</span> in the <span
                        class="code">/var/tmp</span> directory:
            </li>

            <pre class="tty cmd">$ cp /home/weewx/util/import/csv-example.conf /var/tmp/csv.conf
</pre>

            <li>Confirm that the <span class="code"><a href="#import_config_source">source</a></span> option is set to
                CSV:
            </li>

            <pre class="tty">source = CSV</pre>

            <li>Confirm that the following options in the <span class="code">[CSV]</span> section are set:


                <ul>
                    <li><strong><span class="code"><a href="#csv_file">file</a></span></strong>. The full path and file
                        name of the file containing the CSV formatted data to be imported.
                    </li>
                    <li><strong><span class="code"><a href="#csv_interval">interval</a></span></strong>. Determines how
                        the weeWX interval field is derived.
                    </li>
                    <li><strong><span class="code"><a href="#csv_qc">qc</a></span></strong>. Determines whether quality
                        control checks are performed on the imported data.
                    </li>
                    <li><strong><span class="code"><a href="#csv_calc_missing">calc_missing</a></span></strong>.
                        Determines whether missing derived observations will be calculated from the imported data.
                    </li>
                    <li><strong><span class="code"><a href="#csv_tranche">tranche</a></span></strong>. The number of
                        records written to the weeWX database in each transaction.
                    </li>
                    <li><strong><span class="code"><a href="#csv_UV">UV_sensor</a></span></strong>. Whether a UV sensor
                        was installed when the source data was produced.
                    </li>
                    <li><strong><span class="code"><a href="#csv_solar">solar_sensor</a></span></strong>. Whether a
                        solar radiation sensor was installed when the source data was produced.
                    </li>
                    <li><strong><span class="code"><a
                            href="#csv_raw_datetime_format">raw_datetime_format</a></span></strong>. The format of the
                        imported date time field.
                    </li>
                    <li><strong><span class="code"><a href="#csv_rain">rain</a></span></strong>. Determines how the
                        weeWX rain field is derived.
                    </li>
                    <li><strong><span class="code"><a href="#csv_wind_direction">wind_direction</a></span></strong>.
                        Determines how imported wind direction fields are interpreted.
                    </li>
                    <li><strong><span class="code"><a href="#csv_fieldmap">[[FieldMap]]</a></span></strong>. Defines the
                        mapping between imported data fields and weeWX archive fields. Also 
                        defines the units of measure for each imported field.
                    </li>
                </ul>
            </li>

            <li>When first importing data it is prudent to do a dry run import before any data are actually imported. A
                dry run import will perform all steps of the import without actually writing imported data to the
                weeWX database. In addition, consideration should be given to any additional
                options such as <span class="code">--date</span>.

                <p>To perform a dry run enter the following command:</p>

            <pre class="tty cmd">wee_import --import-config=/var/tmp/csv.conf --dry-run
</pre>
                <p>The output should be something like this:</p>

            <pre class="tty">Starting wee_import...
A CSV import from source file '/var/tmp/data.csv' has been requested.
Using database binding 'wx_binding', which is bound to database 'weewx.sdb'
Destination table 'archive' unit system is '0x01' (US).
Missing derived observations will be calculated.
This is a dry run, imported data will not be saved to archive.
Starting dry run import ...
70685 records identified for import.
Records processed: 70685; Unique records: 70685; Last timestamp: 2010-09-04 04:20:00 AEST (1283538000)
Finished dry run import. 70685 records were processed and 70685 unique records would have been imported.
</pre>

                <p>The output includes details about the data source, its destination and some other details on how the
                    data will be processed. The import will then be performed but no data will be written to the
                    weeWX database. Upon completion a brief summary of the records processed
                    is provided. </p>

                <p class="note">
                    <strong>Note</strong><br/>As the weeWX database is not altered when the <span
                        class="code">--dry-run</span> option is used, <span class="code">wee_import</span>
                    log output is suspended during a dry run import. In effect, the use of <span
                        class="code">--dry-run</span> is equivalent to <span class="code">--dry-run --log=-</span>.
                    During a dry run import the only <span class="code">wee_import</span> output is that displayed on
                    <span class="code">stdout</span>. </p>
            </li>

            <li>Once the dry run results are satisfactory the data can be imported using the following command:

                <pre class="tty cmd">wee_import --import-config=/var/tmp/csv.conf</pre>

                <p>This will result in a short preamble similar to that from the dry run. At the end of the preamble
                    there will be a prompt:</p>

    <pre class="tty">Starting wee_import...
A CSV import from source file '/var/tmp/data.csv' has been requested.
Using database binding 'wx_binding', which is bound to database 'weewx.sdb'
Destination table 'archive' unit system is '0x01' (US).
Missing derived observations will be calculated.
Starting import ...
70685 records identified for import.
Proceeding will save all imported records in the weewx archive.
Are you sure you want to proceed (y/n)?
</pre>
            </li>

            <li>If the import parameters are acceptable enter <span class="code">y</span> to proceed with the import or
                <span class="code">n</span> to abort the import. If the import is confirmed then the source data will be
                imported, processed and saved in the weeWX database. Information on the
                progress of the import will be displayed similar to the following:

        <pre class="tty">Records processed: 250; Unique records: 250; Last timestamp: 2010-02-09 19:25:00 AEST (1265707500)
</pre>

                <p>The line commencing with <span class="code">Records processed</span> should update as records are
                    imported with progress information on number of records processed, number of unique records imported
                    and the date time of the latest record processed. When the import is complete a brief summary is
                    displayed similar to the following:</p>

        <pre class="tty">Records processed: 70685; Unique records: 70685; Last timestamp: 2010-09-04 04:20:00 AEST (1283538000)
Finished import. 70685 raw records resulted in 70685 unique records being processed in 276.63 seconds.
Those records with a timestamp already in the archive will not have been imported.
Confirm successful import in the weeWX log file.</pre>

            </li>
            <li>Whilst <span class="code">wee_import</span> will advise of the number of records processed and the
                number of unique records found, <span class="code">wee_import</span> does know how many, if any, of the
                imported records were successfully saved to the database. You should look carefully through the
                weeWX log file covering the <span class="code">wee_import</span> session and
                take note of any records that were not imported. The most common reason for imported records not being
                saved to the database is because a record with that timestamp already exists in the database, in such
                cases something similar to the following will be found in the log:

        <pre class="tty">
Aug 22 14:38:28 jessie2 weewx[863]: manager: unable to add record 2010-09-04 04:20:00 AEST (1283538000) to database 'weewx.sdb': UNIQUE constraint failed: archive.dateTime
</pre>

                <p>In such cases you should take note of the timestamp of the record(s) concerned and make a
                    decision about whether to delete the pre-existing record and re-import the record or retain the
                    pre-existing record.</p>
            </li>

        </ol>

        <h2>Importing from Weather Underground</h2>

        <p><span class="code">wee_import</span> can import data from the daily history of a Weather Undeground PWS. A
            Weather Underground daily history provides weather station observations received by Weather Underground for
            the PWS concerned on a day by day basis. As such, the data is analogous to the
            weeWX archive table. When <span class="code">wee_import</span> imports data from
            a Weather Underground daily history each day is considered a 'period'. <span class="code">wee_import</span>
            processes one period at a time in chronological order (oldest to newest) and provides import summary data on
            a per period basis. </p>

        <h3>Mapping data to archive fields</h3>

        <p>A Weather Underground import will populate weeWX archive fields as follows:</p>

        <ul>
            <li>Provided data exists for each field in the Weather Underground PWS daily history, the following
                weeWX archive fields will be directly populated by imported data:

                <ul>
                    <li><span class="code">dateTime</span></li>
                    <li><span class="code">barometer</span></li>
                    <li><span class="code">dewpoint</span></li>
                    <li><span class="code">outHumidity</span></li>
                    <li><span class="code">outTemp</span></li>
                    <li><span class="code">radiation</span></li>
                    <li><span class="code">rain</span></li>
                    <li><span class="code">windDir</span></li>
                    <li><span class="code">windGust</span></li>
                    <li><span class="code">windSpeed</span></li>
                </ul>

                <p class="note">
                    <strong>Note</strong><br/>If an appropriate field does not exist in the Weather Underground daily history then
                    the corresponding weeWX archive field will be set to <span class="code">None/NULL</span>.
                    For example, if there is no solar radiation sensor then <span class="code">radiation</span> will be
                    NULL, or if <span class="code">outHumidity</span> was never uploaded to Weather Undeground then
                    <span class="code">outHumidity</span> will be NULL. </p>
            </li>

            <li>The following weeWX archive fields will be populated from other settings or
                configuration options:
                <ul>
                    <li><span class="code">interval</span></li>
                    <li><span class="code">usUnits</span></li>
                </ul>
            </li>

            <li>The following weeWX archive fields will be populated with values derived from
                the imported data provided <span class="code">calc_missing = True</span> is included in the <span
                        class="code">[WU]</span> section of the import configuration file and the field exists in the
                in-use weeWX archive table schema.

                <ul>
                    <li><span class="code">altimeter</span></li>
                    <li><span class="code">ET</span></li>
                    <li><span class="code">heatindex</span></li>
                    <li><span class="code">pressure</span></li>
                    <li><span class="code">rainRate</span></li>
                    <li><span class="code">windchill</span></li>
                </ul>

                <p class="note">
                    <strong>Note</strong><br/>If <span class="code">calc_missing = False</span> is included in the <span
                        class="code">[WU]</span> section of the import configuration file being used then all of the
                    above fields will be set to <span class="code">None/NULL</span>. The default setting of the <span
                        class="code">calc_missing</span> option is <span class="code">True</span>
                </p>
            </li>
        </ul>

        <h3>Step-by-step instructions</h3>

        <p>To import observations from the daily history of a Weather Underground PWS:</p>

        <ol>
            <li>Obtain the weather station ID of the Weather Underground PWS from which data is to be imported. The
                station ID will be a sequence of numbers and upper case letters that is usually 11 or 12 characters in
                length. For the purposes of these instructions a weather station ID of <span
                        class="code">ISTATION123</span> will be used.
            </li>

            <li>Make a backup of the weeWX database in case the import should go awry.
            </li>

            <li>Create an import configuration file. In this case we will make a copy of the example Weather Underground
                import configuration file and save it as <span class="code">wu.conf</span> in the <span class="code">/var/tmp</span>
                directory:

            <pre class="tty cmd">$ cp /home/weewx/util/import/wu-example.conf /var/tmp/wu.conf
</pre>

            <li>Confirm that the <span class="code"><a href="#import_config_source">source</a></span> option is set to
                WU
            </li>

            <pre class="tty">source = WU</pre>

            <li>Confirm that the following options in the <span class="code">[WU]</span> section are correctly set:

                <ul>
                    <li><strong><span class="code"><a href="#wu_station_id">station_id</a></span></strong>. The 11 or 12
                        character weather station ID of the Weather Underground PWS that will be the source of the
                        imported data.
                    </li>
                    <li><strong><span class="code"><a href="#wu_interval">interval</a></span></strong>. Determines how
                        the weeWX interval field is derived.
                    </li>
                    <li><strong><span class="code"><a href="#wu_qc">qc</a></span></strong>. Determines whether quality
                        control checks are performed on the imported data.

                        <p class="note">
                            <strong>Note</strong><br/>As Weather Underground imports at times contain nonsense values,
                            particularly for fields for which no data were uploaded to Weather Underground by the PWS,
                            the use of quality control checks on imported data can prevent these nonsense values from
                            being imported and contaminating the weeWX database. </p>
                    </li>

                    <li><strong><span class="code"><a href="#wu_calc_missing">calc_missing</a></span></strong>.
                        Determines whether missing derived observations will be calculated from the imported data.
                    </li>
                    <li><a href="#wu_tranche"><strong><span class="code">tranche</span></strong></a>. The number of
                        records written to the weeWX database in each transaction.
                    </li>
                    <li><a href="#wu_wind_direction"><strong><span class="code">wind_direction</span></strong></a>.
                        Determines how imported wind direction fields are interpreted.
                    </li>
                </ul>
            </li>

            <li>When first importing data it is prudent to do a dry run import before any data are actually imported. A
                dry run import will perform all steps of the import without actually writing imported data to the
                weeWX database. In addition, consideration should be given to any additional
                options to be used such as <span class="code">--date</span>, <span class="code">--from</span> 
                or <span class="code">--to</span>.
                <p>To perform a dry run enter the following command:</p>

            <pre class="tty cmd">wee_import --import-config=/var/tmp/wu.conf --from=2016/01/20T22:30 --to=2016/01/23T06:00 --dry-run
</pre>

                <p>
                    In this case the <span class="code">--from</span> and <span class="code">--to</span> options have 
                    been used to import Weather Underground records from 10:30pm on 20 January 2016 to 6:00am on 
                    23 January 2016 inclusive.</p>

                <p class="note">
                    <strong>Note</strong><br/>If the <span class="code">--date</span> option is omitted, or a date
                    (not date-time) range is specified using the <span class="code">--from</span> and 
                    <span class="code">--to</span> options during a Weather Underground import, then one or more full 
                    days of history data will be imported. This includes records timestamped from <span class="code">00:00</span>
                    (inclusive) at the start of the day up to but NOT including the <span class="code">00:00</span>
                    record at the end of the last day. As the timestamped record refers to observations of the previous
                    interval, such an import actually includes one record with observations from the previous day (the
                    <span class="code">00:00</span> record at the start of the day). Whilst this will not present a
                    problem for <span class="code">wee_import</span> as any records being imported with a timestamp that
                    already exists in the weeWX database are ignored, you may wish to use
                    the <span class="code">--from</span> and <span class="code">--to</span> options with a suitable 
                    date-time range to precisely control which records are imported.</p>

                <p class="note">
                    <strong>Note</strong><br/><span class="code">wee_import</span> obtains Weather Underground daily history data
                    one day at a time via a HTTP request and as such the import of large time spans of data may take
                    some time. Such imports may be best handled as a series of imports of smaller time spans. </p>

                <p>This will result in a short preamble with details on the data source, its destination and some other
                    details on how the data will be processed. The import will then be performed but no data will
                    written to the weeWX database. </p>
                <p>The output should be similar to:</p>

            <pre class="tty">Starting wee_import...
Observation history for Weather Underground station 'ISTATION123' will be imported.
Using database binding 'wx_binding', which is bound to database 'weewx.sdb'
Destination table 'archive' unit system is '0x01' (US).
Missing derived observations will be calculated.
Observations timestamped after 2016-01-20 22:30:00 AEST (1453293000) and up to and
including 2016-01-23 06:00:00 AEST (1453492800) will be imported.
This is a dry run, imported data will not be saved to archive.
Starting dry run import ...
Records covering multiple periods have been identified for import.
Period 1 ...
Records processed: 18; Unique records: 18; Last timestamp: 2016-01-20 23:55:00 AEST (1453298100)
Period 2 ...
Records processed: 263; Unique records: 263; Last timestamp: 2016-01-21 23:55:00 AEST (1453384500)
Period 3 ...
Records processed: 264; Unique records: 264; Last timestamp: 2016-01-22 23:50:00 AEST (1453470600)
Period 4 ...
Records processed: 62; Unique records: 62; Last timestamp: 2016-01-23 05:55:00 AEST (1453492500)
Finished dry run import. 607 records were processed and 607 unique records would have been imported.
</pre>

                <p class="note">
                    <strong>Note</strong><br/>As the weeWX database is not altered when the <span
                        class="code">--dry-run</span> option is used, <span class="code">wee_import</span>
                    log output is suspended during a dry run import. In effect, the use of <span
                        class="code">--dry-run</span> is equivalent to <span class="code">--dry-run --log=-</span>.
                    During a dry run import the only <span class="code">wee_import</span> output is that displayed on
                    <span class="code">stdout</span>(console). </p>
            </li>

            <li>Once the dry run results are satisfactory the source data can be imported using the following command:

        <pre class="tty cmd">wee_import --import-config=/var/tmp/wu.conf --from=2016/01/20T22:30 --to=2016/01/23T06:00
</pre>

                <p>This will result in a short preamble similar to that of a dry run. At the end of the preamble there
                    will be a prompt:</p>

    <pre class="tty">Starting wee_import...
Observation history for Weather Underground station 'ISTATION123' will be imported.
Using database binding 'wx_binding', which is bound to database 'weewx.sdb'
Destination table 'archive' unit system is '0x01' (US).
Missing derived observations will be calculated.
Observations timestamped after 2016-01-20 22:30:00 AEST (1453293000) and up to and
including 2016-01-23 06:00:00 AEST (1453492800) will be imported.
Starting import ...
Records covering multiple periods have been identified for import.
Proceeding will save all imported records in the weewx archive.
Are you sure you want to proceed (y/n)?
</pre>

                <p class="note">
                    <strong>Note</strong><br/><span class="code">wee_import</span> obtains Weather Underground daily history data
                    one day at a time via a HTTP request and as such the import of large time spans of data may take
                    some time. Such imports may be best handled as a series of imports of smaller time spans. </p>
            </li>

            <li>If the import parameters are acceptable enter <span class="code">y</span> to proceed with the import or
                <span class="code">n</span> to abort the import. If the import is confirmed, the source data will be
                imported, processed and saved in the weeWX database. Information on the
                progress of the import will be displayed similar to the following:

        <pre class="tty">Period 1 ...
Records processed: 18; Unique records: 18; Last timestamp: 2016-01-20 23:55:00 AEST (1453298100)
Period 2 ...
Records processed: 286; Unique records: 286; Last timestamp: 2016-01-21 23:55:00 AEST (1453384500)
</pre>

                <p>The line commencing with <span class="code">Records processed</span> should update as records are
                    imported with progress information on number of records processed, number of unique records imported
                    and the date time of the latest record processed. If the import spans multiple days then a new <span
                            class="code">Period</span> line is created for each day. When the import is complete a brief
                    summary is displayed similar to the following:</p>

        <pre class="tty">Finished import. 607 raw records resulted in 607 unique records being processed in 80.94 seconds.
Those records with a timestamp already in the archive will not have been imported.
Confirm successful import in the weeWX log file.
</pre>

                <p class="note">
                    <strong>Note</strong><br/>It is not unusual to see a Weather Underground import return a different number of
                    records for the same import performed at different times. If importing the current day this could be
                    because an additional record may have been added between <span class="code">wee_import</span> runs.
                    For periods before today, this behaviour appears to be a vagary of Weather Underground. The only
                    solution appears to be to repeat the import with the same <span class="code">--date</span>
                    option setting and observe whether the missing records are imported. Repeating the import will
                    not adversely affect any existing data as records with timestamps that are already in the
                    weeWX archive will be ignored. It may; however, generated many
                    <span class="code">UNIQUE constraint failed: archive.dateTime</span> messages in the
                    weeWX log. </p>
            </li>

            <li>Whilst <span class="code">wee_import</span> will advise of the number of records processed and the
                number of unique records found, <span class="code">wee_import</span> does know how many, if any, of the
                imported records were successfully saved to the database. You should look carefully through the
                weeWX log file covering the <span class="code">wee_import</span> session and
                take note of any records that were not imported. The most common reason for imported records not being
                saved to the database is because a record with that timestamp already exists in the database, in such
                cases something similar to the following will be found in the log:

        <pre class="tty">
Aug 22 14:38:28 jessie2 weewx[863]: manager: unable to add record 2010-09-04 04:20:00 AEST (1283538000) to database 'weewx.sdb': UNIQUE constraint failed: archive.dateTime
</pre>

                <p>In such cases you should take note of the timestamp of the record(s) concerned and make a
                    decision about whether to delete the pre-existing record and re-import the record or retain the
                    pre-existing record.</p>

            </li>
        </ol>

        <h2>Importing from Cumulus</h2>

        <p><span class="code">wee_import</span> can import observational data from the one or more Cumulus monthly log
            files. A Cumulus monthly log file records weather station observations for a single month. These files are
            accumulated over time and can be considered analogous to the weeWX archive table.
            When <span class="code">wee_import</span> imports data from the Cumulus monthly log files each log file is
            considered a 'period'. <span class="code">wee_import</span> processes one period at a time in chronological
            order (oldest to newest) and provides import summary data on a per period basis.</p>

        <h3>Mapping data to archive fields</h3>

        <p>A Cumulus monthly log file import will populate the weeWX archive fields as
            follows:</p>

        <ul>
            <li>Provided data exists for each field in the Cumulus monthly logs, the following
                weeWX archive fields will be directly populated by imported data:

                <ul>
                    <li><span class="code">dateTime</span></li>
                    <li><span class="code">barometer</span></li>
                    <li><span class="code">dewpoint</span></li>
                    <li><span class="code">heatindex</span></li>
                    <li><span class="code">inHumidity</span></li>
                    <li><span class="code">inTemp</span></li>
                    <li><span class="code">outHumidity</span></li>
                    <li><span class="code">outTemp</span></li>
                    <li><span class="code">radiation</span></li>
                    <li><span class="code">rain</span></li>
                    <li><span class="code">rainRate</span></li>
                    <li><span class="code">UV</span></li>
                    <li><span class="code">windDir</span></li>
                    <li><span class="code">windGust</span></li>
                    <li><span class="code">windSpeed</span></li>
                    <li><span class="code">windchill</span></li>
                </ul>

                <p class="note">
                    <strong>Note</strong><br/>If a field in the Cumulus monthly log file has no data then the corresponding
                    weeWX archive field will be set to <span class="code">None/NULL</span>. </p>
            </li>

            <li>The following weeWX archive fields will be populated from other settings or
                configuration options:

                <ul>
                    <li><span class="code">interval</span></li>
                    <li><span class="code">usUnits</span></li>
                </ul>
            </li>

            <li>The following weeWX archive fields will be populated with values derived from
                the imported data provided <span class="code">calc_missing = True</span> is included in the <span
                        class="code">[Cumulus]</span> section of the import configuration file being used and the field
                exists in the in-use weeWX archive table schema.

                <ul>
                    <li><span class="code">altimeter</span></li>
                    <li><span class="code">ET</span></li>
                    <li><span class="code">pressure</span></li>
                </ul>

                <p class="note">
                    <strong>Note</strong><br/>If <span class="code">calc_missing = False</span> is included in the <span
                        class="code">[WU]</span> section of the import configuration file being used then all of the
                    above fields will be set to <span class="code">None/NULL</span>. The default setting of the <span
                        class="code">calc_missing</span> option is <span class="code">True</span>
                </p>
            </li>
        </ul>

        <h3>Step-by-step instructions</h3>

        <p>To import observations from one or more Cumulus monthly log files:</p>

        <ol>
            <li>Ensure the Cumulus monthly log file(s) to be used for the import are located in a directory accessible
                by the machine that will run <span class="code">wee_import</span>. For the purposes of these
                instructions, there are nine monthly logs files covering the period November 2015 to July 2016,
                inclusive, located in the <span class="code">/var/tmp/cumulus</span> folder.
            </li>

            <li>Make a backup of the weeWX database in case the import should go awry.
            </li>

            <li>Create an import configuration file. In this case we will make a copy of the example Cumulus import
                configuration file and save it as <span class="code">cumulus.conf</span> in the <span class="code">/var/tmp</span>
                directory:

            <pre class="tty cmd">$ cp /home/weewx/util/import/cumulus-example.conf /var/tmp/cumulus.conf
</pre>

            <li>Confirm that the <span class="code">source</span> option is set to Cumulus:
            </li>

            <pre class="tty">source = Cumulus</pre>

            <li>Confirm that the following options in the <span class="code">[Cumulus]</span> section are correctly set:

                <ul>
                    <li><a href="#cumulus_directory"><strong><span class="code">directory</span></strong></a>. The full
                        path to the directory containing the Cumulus monthly log files to be used as the source of the
                        imported data.
                    </li>
                    <li><a href="#cumulus_interval"><strong><span class="code">interval</span></strong></a>. Determines
                        how the weeWX interval field is derived.
                    </li>
                    <li><a href="#cumulus_qc"><strong><span class="code">qc</span></strong></a>. Determines whether
                        quality control checks are performed on the imported data.
                    </li>
                    <li><a href="#cumulus_calc_missing"><strong><span class="code">calc_missing</span></strong></a>.
                        Determines whether missing derived observations will be calculated from the imported data.
                    </li>
                    <li><a href="#cumulus_separator"><strong><span class="code">separator</span></strong></a>. The date
                        field separator used in the Cumulus monthly log files.
                    </li>
                    <li><a href="#cumulus_delimiter"><strong><span class="code">delimiter</span></strong></a>. The field
                        delimiter used in the Cumulus monthly log files.
                    </li>
                    <li><a href="#cumulus_decimal"><strong><span class="code">decimal</span></strong></a>. The decimal
                        point character used in the Cumulus monthly log files.
                    </li>
                    <li><a href="#cumulus_tranche"><strong><span class="code">tranche</span></strong></a>. The number of
                        records written to the weeWX database in each transaction.
                    </li>
                    <li><a href="#cumulus_UV"><strong><span class="code">UV_sensor</span></strong></a>. Whether a UV
                        sensor was installed when the source data was produced.
                    </li>
                    <li><a href="#cumulus_solar"><strong><span class="code">solar_sensor</span></strong></a>. Whether a
                        solar radiation sensor was installed when the source data was produced.
                    </li>
                    <li><a href="#cumulus_units"><strong><span class="code">[[Units]]</span></strong></a>. Defines the
                        units used in the Cumulus monthly log files.
                    </li>
                </ul>
            </li>

            <li>When first importing data it is prudent to do a dry run import before any data are actually imported. A
                dry run import will perform all steps of the import without actually writing imported data to the
                weeWX database. In addition, consideration should be given to any additional
                options to be used such as <span class="code">--date</span>.
                <p>To perform a dry run enter the following command:</p>

            <pre class="tty cmd">wee_import --import-config=/var/tmp/cumulus.conf --dry-run
</pre>

                <p>This will result in a short preamble with details on the data source, its destination and some other
                    details on how the data will be processed. The import will then be performed but no data will be
                    written to the weeWX database. </p>
                <p>The output should be similar to:</p>

            <pre class="tty">Starting wee_import...
Cumulus monthly log files in the '/var/tmp/cumulus' directory will be imported
Using database binding 'wx_binding', which is bound to database 'weewx.sdb'
Destination table 'archive' unit system is '0x01' (US).
Missing derived observations will be calculated.
This is a dry run, imported data will not be saved to archive.
Starting dry run import ...
Records covering multiple periods have been identified for import.
Period 1 ...
Records processed: 4189; Unique records: 4169; Last timestamp: 2015-12-01 09:40:00 AEST (1448926800)
Period 2 ...
Records processed: 4461; Unique records: 4461; Last timestamp: 2016-01-01 09:40:00 AEST (1451605200)
Period 3 ...
Records processed: 4458; Unique records: 4458; Last timestamp: 2016-02-01 09:40:00 AEST (1454283600)
Period 4 ...
Records processed: 3940; Unique records: 3940; Last timestamp: 2016-03-01 09:40:00 AEST (1456789200)
Period 5 ...
Records processed: 4061; Unique records: 4061; Last timestamp: 2016-04-01 09:40:00 AEST (1459467600)
Period 6 ...
Records processed: 4298; Unique records: 4292; Last timestamp: 2016-05-01 08:40:00 AEST (1462056000)
Period 7 ...
Records processed: 4380; Unique records: 4379; Last timestamp: 2016-06-01 08:40:00 AEST (1464734400)
Period 8 ...
Records processed: 4317; Unique records: 4317; Last timestamp: 2016-07-01 08:40:00 AEST (1467326400)
Period 9 ...
Records processed: 3544; Unique records: 3543; Last timestamp: 2016-07-26 17:00:00 AEST (1469516400)
Finished dry run import. 37648 records were processed and 37620 unique records would have been imported.
</pre>

                <p class="note">
                    <strong>Note</strong><br/>The nine periods correspond to the nine monthly log files used for this import. </p>
            </li>

            <li>Once the dry run results are satisfactory the data can be imported using the following command:

        <pre class="tty cmd">wee_import --import-config=/var/tmp/cumulus.conf
</pre>

                <p>This will result in a preamble similar to that of a dry run. At the end of the preamble there will be
                    a prompt:</p>

    <pre class="tty">Starting wee_import...
Cumulus monthly log files in the '/var/tmp/cumulus' directory will be imported
Using database binding 'wx_binding', which is bound to database 'weewx.sdb'
Destination table 'archive' unit system is '0x01' (US).
Missing derived observations will be calculated.
Starting import ...
Records covering multiple periods have been identified for import.
Proceeding will save all imported records in the weewx archive.
Are you sure you want to proceed (y/n)?
</pre>

                <p>If there is more than one Cumulus monthly log file then <span class="code">wee_import</span> will
                    provide summary information on a per period basis during the import. In addition, if the <span
                            class="code">--date</span> option is used then source data that falls outside
                    the date or date range specified with the <span class="code">--date</span> option is
                    ignored. In such cases the preamble may look similar to:</p>

    <pre class="tty">Starting wee_import...
Cumulus monthly log files in the '/var/tmp/cumulus' directory will be imported
Using database binding 'wx_binding', which is bound to database 'weewx.sdb'
Destination table 'archive' unit system is '0x01' (US).
Missing derived observations will be calculated.
Observations timestamped after 2016-02-12 00:00:00 AEST (1455199200) and up to and
including 2016-02-25 00:00:00 AEST (1456322400) will be imported.
Starting import ...
Period 1 - no records identified for import.
Period 2 - no records identified for import.
Period 3 - no records identified for import.
Proceeding will save all imported records in the weewx archive.
Are you sure you want to proceed (y/n)?
</pre>
            </li>

            <li>If the import parameters are acceptable enter <span class="code">y</span> to proceed with the import or
                <span class="code">n</span> to abort the import. If the import is confirmed, the source data will be
                imported, processed and saved in the weeWX database. Information on the
                progress of the import will be displayed similar to the following:

        <pre class="tty">Records processed: 1599; Unique records: 1599; Last timestamp: 2016-02-24 00:00:00 AEST (1456236000)
</pre>

                <p>Again if there is more than one Cumulus monthly log file and if the <span class="code">--date</span>
                    option is used then the progress information may instead look similar to:</p>

        <pre class="tty">Period 4 ...
Records processed: 2521; Unique records: 2521; Last timestamp: 2016-03-01 09:40:00 AEST (1456789200)
Period 5 ...
Records processed: 4061; Unique records: 4061; Last timestamp: 2016-04-01 09:40:00 AEST (1459467600)
Period 6 ...
Records processed: 3238; Unique records: 3232; Last timestamp: 2016-04-24 00:00:00 AEST (1461420000)
</pre>

                <p>The line commencing with <span class="code">Records processed</span> should update as records are
                    imported with progress information on number of records processed, number of unique records imported
                    and the date time of the latest record processed. If the import spans multiple months (ie multiple
                    monthly log files) then a new <span class="code">Period</span> line is created for each month. When
                    the import is complete a brief summary is displayed similar to the following:</p>

        <pre class="tty">Finished import. 37648 raw records resulted in 37620 unique records being processed in 93.70 seconds.
Those records with a timestamp already in the archive will not have been imported.
Confirm successful import in the weewx log file.
</pre>
            </li>

            <li>Whilst <span class="code">wee_import</span> will advise of the number of records processed and the
                number of unique records found, <span class="code">wee_import</span> does know how many, if any, of the
                imported records were successfully saved to the database. You should look carefully through the
                weeWX log file covering the <span class="code">wee_import</span> session and
                take note of any records that were not imported. The most common reason for imported records not being
                saved to the database is because a record with that timestamp already exists in the database, in such
                cases something similar to the following will be found in the log:

        <pre class="tty">
Aug 22 14:38:28 jessie2 weewx[863]: manager: unable to add record 2010-09-04 04:20:00 AEST (1283538000) to database 'weewx.sdb': UNIQUE constraint failed: archive.dateTime
</pre>

                <p>In such cases take note of the timestamp of the record(s) concerned and make a decision about whether
                    to delete the pre-existing record and re-import the record or retain the pre-existing record.</p>
            </li>
        </ol>

        <h2 id='import_failures'>Dealing with import failures</h2>

        <p>Sometimes bad things happen during an import.</p>

        <p>If errors were encountered, or if you suspect that the weeWX database has been
            contaminated with incorrect data, here are some things you can try to fix things up. </p>

        <ul>
            <li>Manually delete the contaminated data. Use SQL commands to manipulate the data in the
                weeWX archive database. The simplicity of this process will depend on your
                ability to use SQL, the amount of data imported, and whether the imported data was dispersed amongst
                existing. Once contaminated data have been removed the daily summary tables will need to be rebuilt using
                the <span class="code">wee_database</span> utility.
            </li>

            <li>Delete the database and start over. For SQLite, simply delete the database file. For MySQL, drop the
                database. Then try the import again.
            </li>

                <p class="warning">
                    <strong>Warning!</strong><br/>Deleting the database file or dropping the database will result in all 
                    data in the database being lost.
                </p>
            
            <li>If the above steps are not appropriate then the database should be restored from backup. You did make a
                backup before starting the import?
            </li>
        </ul>


        <!-- ======== -->


        <h1 id="wee_reports_utility"><span class="code">wee_reports</span></h1>
        <p>In normal operation, weeWX generates reports on each archive interval, when new
            data arrive. The reports utility is used to generate reports on demand. It uses the same configuration file
            that weeWX uses. </p>

        <p>Run the utility with the <span class='code'>--help</span> option to see how it is used: </p>

        <pre class="tty cmd">wee_reports --help</pre>

        <p>This results in something like this:</p>

            <pre class="tty">Usage: wee_reports: [config_file] [timestamp] [--config=CONFIG_FILE] [--help]

Run all reports defined in the specified configuration file. Use this utility
to run reports immediately instead of waiting for the end of an archive
interval.

Options:
  -h, --help            show this help message and exit
  --config=CONFIG_FILE  Use the configuration file CONFIG_FILE
</pre>

        <!-- ======== -->


        <h1 id="weewxd"><span class="code">weewxd</span></h1>

        <p>The <span class='code'>weewxd</span> application is the heart of weeWX. It can be
            run directly, or in the background as a daemon. </p>

        <p>Run with the <span class='code'>--help</span> option to see how it is used: </p>

        <pre class="tty cmd">weewxd --help</pre>

        <p>This results in output something like:</p>

            <pre class="tty">Usage: weewxd --help
       weewxd --version
       weewxd config_file [--daemon] [--pidfile=PIDFILE] 
                          [--exit]   [--loop-on-init]
                          [--log-label=LABEL]
           
  Entry point to the weewx weather program. Can be run directly, or as a daemon
  by specifying the '--daemon' option.

Arguments:
    config_file: The weewx configuration file to be used.


Options:
  -h, --help            show this help message and exit
  -d, --daemon          Run as a daemon
  -p PIDFILE, --pidfile=PIDFILE
                        Store the process ID in PIDFILE
  -v, --version         Display version number then exit
  -x, --exit            Exit on I/O and database errors instead of restarting
  -r, --loop-on-init    Retry forever if device is not ready on startup
  -n LABEL, --log-label=LABEL
                        Label to use in syslog entries</pre>


        <!-- ======== -->


        <h1 id="wunderfixer_utility"><span class="code">wunderfixer</span></h1>

        <p>For a number of reasons, posting weather observation data to
            Weather Underground often results in missing observations.  The
            <span class="code">wunderfixer</span> utility can re-post such
            missing observations.  This section explains how to do it.
        </p>

        <p class="warning">
            <strong>Warning!</strong><br/>Once published, Weather Underground
            observation data can only be deleted; data cannot be modified.
            Even when observations are deleted on Weather Underground, the 
            underlying record remains, albeit with one or more blank
            observation fields. Accordingly, you should carefully use
            <span class="code">wunderfixer</span> to ensure that
            the correct data source data is used.
        </p>
        
        <p class="note">
            <strong>Note</strong><br/><span class="code">wunderfixer</span> uses the Weather Underground convention of what is a 
            day. That is, a day runs from the record timestamped at midnight to the last record timestamped on the same 
            day. By this convention, the first record is actually an archive for the last archive interval of the 
            previous day.
        </p>

        <p>Before starting, it's worth running the utility with the
            <span class="code">--help</span> flag to
            see how <span class="code">wunderfixer</span> is used:
        </p>

        <pre class="tty cmd">wunderfixer --help</pre>

        <p>This will result in an output that looks something like this:</p>

        <pre class="tty">Usage: wunderfixer CONFIG_FILE|--config=CONFIG_FILE
                  [--binding=BINDING]
                  [--station=STATION] [--password=PASSWORD]
                  [--date=YYYY-mm-dd] [--epsilon=SECONDS]
                  [--verbose] [--log=LOG_FACILITY] [--test] [--query]
                  [--help]

This utility fills in missing data on the Weather Underground.  It goes through
all the records in a weewx archive for a given day, comparing to see whether a
corresponding record exists on the Weather Underground. If not, it will publish
a new record on the Weather Underground with the missing data.

Be sure to use the --test switch first to see whether you like what it
proposes!

Options:
  -h, --help            show this help message and exit
  -c CONFIG_PATH, --config=CONFIG_PATH
                        Use configuration file CONFIG_PATH. Default is
                        /etc/weewx/weewx.conf or /home/weewx/weewx.conf.
  -b BINDING, --binding=BINDING
                        The database binding to be used. Default is
                        'wx_binding'.
  -s STATION, --station=STATION
                        Weather Underground station to check. Optional.
                        Default is to take from configuration file.
  -p PASSWORD, --password=PASSWORD
                        Weather Underground station password. Optional.
                        Default is to take from configuration file.
  -d YYYY-mm-dd, --date=YYYY-mm-dd
                        Date to check as a string of form YYYY-mm-dd. Default
                        is today.
  -e SECONDS, --epsilon=SECONDS
                        Timestamps within this value in seconds compare true.
                        Default is 120.
  -v, --verbose         Print useful extra output.
  -l LOG_FACILITY, --log=LOG_FACILITY
                        Log selected output to syslog. If omitted no syslog
                        logging occurs. If LOG_FACILITY is 'weewx' then logs
                        are written to the same log used by weewx. Any other
                        parameter will log to syslog.
  -t, --test            Test what would happen, but don't do anything.
  -q, --query           For each record, query the user before making a
                        change.</pre>

        <h2><span id='wunderfixer_details'>Actions and options</span></h2>

        <p>The <span class="code">wunderfixer</span> options are described in more detail below:</p>

        <h3>Option <span class="code" id="wunderfixer_config">--config</span></h3>

        <p>The utility is pretty good at "guessing" where the weewx
            configuration file is, but if you've done an unusual install, you
            may have to tell it explicitly. You can do this by using the
            <span class="code">--config</span> option:
        </p>

        <pre class="tty cmd">wunderfixer --config=/this/folder/weewx.conf
</pre>

        <h3>Option <span class="code" id="wunderfixer_binding">--binding</span></h3>

        <p>Specifies the data binding to be used as the source of data for missing records to be published to Weather 
            Underground. Default is <span class="code">wx_binding</span>. The <span 
                    class="code">--binding</span> option is used as follows:
        </p>

        <pre class="tty cmd">wunderfixer --binding=another_binding</pre>

        <h3>Option <span class="code" id="wunderfixer_station">--station</span></h3>

        <p>The weather station ID of the Weather Underground PWS. The default
            is the  station specified in the <a href="usersguide.htm#[[Wunderground]]">[StdRESTful][[Wunderground]]</a> section of the configuration file.
            The <span class="code">--station</span> option is used as follows:
        </p>

        <pre class="tty cmd">wunderfixer --station=AB123456789</pre>

        <h3>Option <span class="code" id="wunderfixer_password">--password</span></h3>

        <p>The password corresponding to the weather station ID. The default
            is the password specified in the <a href="usersguide.htm#[[Wunderground]]">[StdRESTful][[Wunderground]]</a> section of the configuration file.
            The <span class="code">--password</span> option is used as follows:
        </p>

        <pre class="tty cmd">wunderfixer --station=AB123456789 --password=hardtoguess</pre>

        <h3>Option <span class="code" id="wunderfixer_date">--date</span></h3>

        <p>By default <span class="code">wunderfixer</span> checks the current
            date according to the system date-time. Use this option to specify
            a different date.  This feature is useful when running as a cron
            job.  The <span class="code">--date</span> option accepts dates
            in the format <span class="code">YYYY-mm-dd</span>.  For example:
        </p>

        <pre class="tty cmd">wunderfixer --date=2016-04-20</pre>

        <h3>Option <span class="code" id="wunderfixer_epsilon">--epsilon</span></h3>

        <p>At times Weather Underground records may have a date-time that is slightly different to the timestamp of the 
            record as recorded by weeWX. The <span class="code">--epsilon</span> 
            option allows timestamps that are within the <span class="code">--epsilon</span> value 
            seconds of each other to be considered the same. The default value is <span class="code">120</span>. 
            The <span class="code">--epsilon</span> option is used as follows:
        </p>

        <pre class="tty cmd">wunderfixer --epsilon=60</pre>

        <h3>Option <span class="code" id="wunderfixer_verbose">--verbose</span></h3>

        <p>Use of the <span class="code">--verbose</span> option results in <span 
                    class="code">wunderfixer</span> displaying useful additional information during execution. The <span 
                    class="code">--verbose</span> option is of little use when <span 
                    class="code">wunderfixer</span> is run as a cron job.
        </p>

        <h3>Option <span class="code" id="wunderfixer_log">--log</span></h3>

        <p>Control the <span class="code">wunderfixer</span> log output. The default is no logging. If <span 
                    class="code">--log=weewx</span> is used then <span class="code">wunderfixer</span> logs to 
            the same log file as used by weeWX. Any other setting will result in <span 
                    class="code">wunderfixer</span> logs being written to <span class="code">syslog</span>. 
            The <span class="code">--log</span> option is used as follows:
        </p>

        <pre class="tty cmd">wunderfixer --log=weewx</pre>

        <h3>Option <span class="code" id="wunderfixer_test">--test</span></h3>

        <p>The <span class="code">--test</span> option will cause <span 
                    class="code">wunderfixer</span> to do everything except upload any missing data to Weather 
            Underground. Summary information on any identified missing data will be displayed.
        </p>

        <h3>Option <span class="code" id="wunderfixer_query">--query</span></h3>

        <p>The <span class="code">--query</span> option will cause
            <span class="code">wunderfixer</span> to seek user confirmation
            before each missing record is uploaded to Weather Underground.
            When queried you may respond with <span class="code">y</span> to
            publish the record, <span class="code">n</span> to skip the record
            without publishing, <span class="code">a</span> to publish the
            record and automatically publish all further records or
            <span class="code">q</span> to skip the record and quit
            <span class="code">wunderfixer</span>. The
            <span class="code">--query</span> option should not be used as
            part of a cron job.
        </p>

        
        <h2 id='wunderfixer_direct'>Running directly</h2>

        <p>Run <span class="code">wunderfixer</span> directly to publish
            missing data for a single day. This may be useful if you wish to
            restore data from a short network outage or similar problems that
            resulted in missing Weather Underground data. Running
            <span class="code">wunderfixer</span> directly is also a useful
            exercise in the lead up to running as a
            <a href="#wunderfixer_cron">cron job</a>, as it allows you to
            verify correct operation before automating the process.
        </p>

        <p>
            The following instructions will publish data for the current day
            for the station whose credentials appear in the <a href="usersguide.htm#[[Wunderground]]">[StdRESTful][[Wunderground]]</a>
            section of <span class="code">weewx.conf</span>.
        </p>

        <p class="note">
            <strong>Note</strong><br/>
            Data for another station or date could be published by using the
            <span class="code">--station</span>,
            <span class="code">--password</span> and
            <span class="code">--date</span> options.
        </p>

        <p>To run <span class="code">wunderfixer</span> directly:</p>

        <ol>
            <li>Before publishing missing data for the first time,
                do a test run by specifying the
                <span class="code">--test</span> option.
            </li>

            <pre class="tty cmd">wunderfixer --test</pre>

                <p>This will result in output similar to the following:</p>
            
            <pre class="tty">Using configuration file /home/weewx/weewx.conf.
Using database binding 'wx_binding', which is bound to database 'archive_sqlite'
2016-09-22 06:30:00 AEST (1474489800); 29.920";  58.9F;  79%; 1.0 mph; 248 deg; 6.0 mph gust;  52.4F; 0.00" rain; 0.01" daily rain  ... skipped.
2016-09-22 07:35:00 AEST (1474493700); 29.931";  64.9F;  65%; 2.0 mph; 180 deg; 7.0 mph gust;  52.8F; 0.00" rain; 0.01" daily rain  ... skipped.
2016-09-22 07:55:00 AEST (1474494900); 29.934";  65.8F;  63%; 2.0 mph; 180 deg;10.0 mph gust;  52.8F; 0.00" rain; 0.01" daily rain  ... skipped.
2016-09-22 08:20:00 AEST (1474496400); 29.938";  66.5F;  59%; 5.0 mph; 180 deg;12.0 mph gust;  51.7F; 0.00" rain; 0.01" daily rain  ... skipped.
</pre>
                <p>This output indicates that four records were found to be missing. The word 'skipped' at the end of 
                    each line indicates that whilst <span class="code">wunderfixer</span> detected the record as missing, 
                    the record was skipped and not published to Weather Underground. If no missing records were found 
                    then no records will be listed.
                </p>
                
                <p class="note">
                    <strong>Note</strong><br/>
                    Use of the <span class="code">--verbose</span> option will
                    display additional information including the station,
                    the date, and the number of records.
                </p>

            <li>Once the test results are satisfactory, publish the missing
                records using the command:
            </li>
            
            <pre class="tty cmd">wunderfixer</pre>

                <p>This will result in output similar to the following:</p>
            
            <pre class="tty">Using configuration file /home/weewx/weewx.conf.
Using database binding 'wx_binding', which is bound to database 'archive_sqlite'
2016-09-22 06:30:00 AEST (1474489800); 29.920";  58.9F;  79%; 1.0 mph; 248 deg; 6.0 mph gust;  52.4F; 0.00" rain; 0.01" daily rain  ... published.
2016-09-22 07:35:00 AEST (1474493700); 29.931";  64.9F;  65%; 2.0 mph; 180 deg; 7.0 mph gust;  52.8F; 0.00" rain; 0.01" daily rain  ... published.
2016-09-22 07:55:00 AEST (1474494900); 29.934";  65.8F;  63%; 2.0 mph; 180 deg;10.0 mph gust;  52.8F; 0.00" rain; 0.01" daily rain  ... published.
2016-09-22 08:20:00 AEST (1474496400); 29.938";  66.5F;  59%; 5.0 mph; 180 deg;12.0 mph gust;  51.7F; 0.00" rain; 0.01" daily rain  ... published.
</pre>
        
                <p>This output indicates that four records were found to be missing. This time word 'skipped' at the end 
                    of each line has been replaced with the word 'published' indicating that <span 
                            class="code">wunderfixer</span> has published the record to Weather Underground. If no missing 
                    records were found then no records will be listed.
                </p>
                
                <p>If the <span class="code">--query</span> option had 
                    been used the output would be something like this:
                </p>
                
            <pre class="tty">Using configuration file /home/weewx/weewx.conf.
Using database binding 'wx_binding', which is bound to database 'archive_sqlite'
Weather Underground Station:   ABCDEFGH123
Date to check:                 2016-09-22
Number of archive records:     288
Number of WU records:          284
Number of missing records:     4

Missing records:
2016-09-22 06:30:00 AEST (1474489800); 29.920";  58.9F;  79%; 1.0 mph; 248 deg; 6.0 mph gust;  52.4F; 0.00" rain; 0.01" daily rain  ...fix? (y/n/a/q):y
 ...published.
2016-09-22 07:35:00 AEST (1474493700); 29.931";  64.9F;  65%; 2.0 mph; 180 deg; 7.0 mph gust;  52.8F; 0.00" rain; 0.01" daily rain  ...fix? (y/n/a/q):y
 ...published.
2016-09-22 07:55:00 AEST (1474494900); 29.934";  65.8F;  63%; 2.0 mph; 180 deg;10.0 mph gust;  52.8F; 0.00" rain; 0.01" daily rain  ...fix? (y/n/a/q):y
 ...published.
2016-09-22 08:20:00 AEST (1474496400); 29.938";  66.5F;  59%; 5.0 mph; 180 deg;12.0 mph gust;  51.7F; 0.00" rain; 0.01" daily rain  ...fix? (y/n/a/q):
</pre>
        
            <p class="note">
                <strong>Note</strong><br/>
                It is possible that two <span class="code">wunderfixer</span>
                sessions for the same station and date may return two different
                sets of missing records. This is a vagary of Weather
                Underground and is not a cause for concern. If you are
                concerned that not all missing records were published you can
                run <span class="code">wunderfixer</span> again with the same
                settings. Re-publishing records that already 
                exist on Weather Underground has no known adverse effects.
            </p>

        </ol>

        
        <h2 id='wunderfixer_cron'>Running as a cron job</h2>

        <p>At times Weather Underground flatly refuses to update older dates, typically those more than a couple of weeks 
            old. For this reason running <span class="code">wunderfixer</span> using a nightly cron job is advisable. To 
            run <span class="code">wunderfixer</span> as a nightly cron job:
        </p>
        
        <ol>
            <li>Ensure that <span class="code">wunderfixer</span> operates as
                intended when <a href="#wunderfixer_direct">run directly</a>.
                <p class="note">
                    <strong>Note</strong><br/>
                    Beware that running <span class="code">wunderfixer</span>
                    with the <span class="code">--test</span> option does not
                    utilise the station password.  So be sure to run at least
                    once without the <span class="code">--test</span> option
                    to ensure that the correct station and password parameters
                    have been specified.
                </p>
            </li>

            <li>Decide how often and when to run <span class="code">wunderfixer</span>. Given the use of the 
                midnight to midnight day, it may be prudent to run <span class="code">wunderfixer</span> close to midnight 
                at the end of the day after the second last archive record of the day (remember the last archive record 
                of the day is at midnight). For an installation that uses a five minute archive period this would be 
                between 11:55pm and midnight. Furthermore, as Weather Underground at times does not update a record 
                despite returning 'success' it may be advisable to run <span class="code">wunderfixer</span> more than 
                once per day. For the purposes of these instructions we will set a cron job to run <span 
                        class="code">wunderfixer</span> at 11:58pm daily.
            </li>

            <li>Create (if one does not exist) or edit a crontab file using the following command:
            </li>
            
            <pre class="tty cmd">crontab -e</pre>
            
            <p class="note">
                <strong>Note</strong><br/>The above command will create a crontab file for the currently logged in user. Any 
                commands in the crontab will be executed as the user who owns the crontab. If the currently logged in 
                user does not have adequate permissions to run <span class="code">wunderfixer</span> you may need to use 
                the root user crontab by using the command <span class="code">sudo crontab -e</span>.
            </p>

            <p>This should display a crontab file similar to the following:</p>
            
            <pre class="tty"># Edit this file to introduce tasks to be run by cron.
#
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
#
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').#
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
#
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
#
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
#
# For more information see the manual pages of crontab(5) and cron(8)
#
# m h  dom mon dow   command</pre>

            <li>To run <span class="code">wunderfixer</span> at 11:58pm daily insert the following lines at the end of 
                the crontab file:
            </li>

            <pre class="tty"># Run wunderfixer at 1158pm daily
58 23 * * * /home/weewx/bin/wunderfixer --log weewx > /dev/null 2>&1
</pre>

                <p>The above command executes <span class="code">wunderfixer</span> each night at 11:58pm and publishes 
                    any missing records for the current day for the station whose credentials appear in the <a 
                            href="usersguide.htm#[[Wunderground]]">[StdRESTful][[Wunderground]]</a> section of <span 
                            class="code">weewx.conf</span>. <span class="code">wunderfixer</span> log output will be sent 
                    to the log file used by weeWX. The <span 
                            class="code">&gt; /dev/null 2>&amp;1</span> portion of the command suppresses any <span 
                            class="code">wunderfixer</span> screen output by redirecting any screen and error output to 
                    the null device.
                </p>
            
            <li>Save the crontab file and exit the editor.
            </li>
            
            <li><span class="code">wunderfixer</span> will now be run at 11:58pm daily. To run <span 
                        class="code">wunderfixer</span> again at a different time either create a new crontab entry or 
                modify the scheduling of the existing entry to suit.
            </li>

            <li>Verify that <span class="code">wunderfixer</span> is being executed by cron as expected:
            
                <ul>
                    <li>Check the cron log to verify that <span class="code">wunderfixer</span> was run at the expected 
                        time. The location of the cron log will vary depending on your version of Linux.
                    </li>
                    
                    <li>Check the <span class="code">wunderfixer</span> log to confirm how many, if any, records were 
                        uploaded to Weather Underground. The location of the <span class="code">wunderfixer</span> log 
                        will depend on the <span class="code">--log</span> option used and your version of Linux.
                    </li>
                    
                    <li>Check the Weather Undeground daily history for the station concerned to ensure that any missing 
                        data was accepted by Weather Underground.
                    </li>
                </ul>
            </li>
        </ol>

        <h2>Dealing with failures</h2>

        <p>Weather Underground is known for a number of quirks in behaviour, this coupled with a misconfigured <span 
                    class="code">wunderfixer</span> session or incomplete weeWX archive data 
            can lead to unexpected results when using <span class="code">wunderfixer</span>. Some of the issues and 
            errors that may be encountered and possible solutions are detailed below.
        </p>
        
        <h3>Updated records do not appear on Weather Underground</h3>
        
        <p>What appears to be a successfully posted record to Weather Underground may not appear in the station history 
            for a number of reasons. Some of these reasons include:
        </p>
        
        <ol>
            <li>Weather Underground just chose to ignore the post. In this case, use <span 
                        class="code">wunderfixer</span> to publish the missing record again.
            </li>
            
            <li>Weather Underground has not yet updated the stations history. Sometimes Weather Underground takes a short 
                time to update the stations history. If the record does not appear in the station history within the next 
                hour use <span class="code">wunderfixer</span> to publish the missing record again.
            </li>
            
            <li>There is no corresponding record in the weeWX archive. Check the
                weeWX archive to see if the record concerned exists. If the record does not 
                exist then it must be re-created before it can be published by <span class="code">wunderfixer</span>.
            </li>
            
            <li><span class="code">wunderfixer</span> may have been run with
                the <span class="code">--test</span> option thus only checking
                for missing records and not publishing them. In this case, run
                <span class="code">wunderfixer</span> again without the
                <span class="code">--test</span> option.
            </li>
        </ol>
        
        <h3>Incorrect data was published on Weather Underground</h3>
        
        <p>If you have published incorrect data to Weather Underground there is little that can be done other than 
            manually deleting the erroneous observation data from Weather Underground. Weather Underground does allow 
            observation data to be edited; however, the only available option is to delete the observation(s); it is not 
            possible to change the value recorded against an observation to the correct value nor is it possible to 
            delete an entire record. It appears that when all observations for a given record are deleted Weather 
            Underground retains the record but with no observation data. Consequently, subsequent <span 
                    class="code">wunderfixer</span> sessions using the correct data will not result in the correct data 
            being published as Weather Underground allows publishing of new records but not re-publishing of existing 
            records. For these reasons you should ensure <span class="code">wunderfixer</span> is operating correctly 
            with the <span class="code">--test</span>
            option before publishing any missing data or running <span class="code">wunderfixer</span> as a cron job.
        </p>


        <!-- ======== -->

    </div> <!-- end technical_content -->

    <div class="footer">
        <p class="copyright"> &copy; <a href="copyright.htm">Copyright</a> Tom Keffer </p>
    </div>

</div> <!-- end class main -->

<!-- Our scripts load last so the content can load first -->
<script type="text/javascript" src="js/jquery-1.11.1.min.js"></script>
<script type="text/javascript" src="js/jquery-ui-1.10.4.custom.min.js"></script>
<script type="text/javascript" src="js/jquery.tocify-1.9.0.min.js"></script>
<script type="text/javascript" src="js/weewx.js"></script>
<script type="text/javascript">
    $(function () {
        var level = get_default_level();
        create_toc_control(level);
        generate_toc(level);
    });
</script>

</body>
</html>
